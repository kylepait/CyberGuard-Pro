{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyChartComponent from './trainingModulesBarChart';\nimport TrainingOverviewPieChart from './trainingOverviewPieChart'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerMetricsDashboard() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rarestBadge, setRarestBadge] = useState({\n    badge_name: '',\n    count: 0\n  });\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\n  const [goalDueDate, setGoalDueDate] = useState('');\n  const [goalIncentive, setGoalIncentive] = useState('');\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\n  const refreshAllData = async () => {\n    await fetchTrainingAssignments();\n    await fetchEmployeeBadges();\n    await fetchAllTrainings();\n    await fetchTrainingAssignments();\n    await fetchBadges();\n    await fetchEnrollEmployees();\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\n    // Include any other fetch calls needed to refresh your UI accordingly\n  };\n  const [chartData, setChartData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Number of assigned trainings per employee\n    completedCount: [] // Number of completed trainings per employee\n  });\n  const totalAssigned = assignedModules.reduce((acc, module) => acc + module.count, 0);\n  const totalCompleted = completedModules.reduce((acc, module) => acc + module.count, 0);\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEnrollEmployee,\n        moduleId: selectedEnrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  const unenrollEmployeeFromTraining = async () => {\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedUnenrollEmployee,\n        moduleId: selectedUnenrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee unenrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to unenroll employee.');\n    }\n  };\n  const fetchBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n      const data = await response.json();\n      setBadges(data);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n    }\n  };\n  const fetchEmployeeBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data);\n\n        // Initialize a map to count occurrences of each badge and keep track of an image path\n        let badgeCounts = new Map();\n\n        // Iterate over each employee and their badges\n        data.forEach(employee => {\n          employee.badges.forEach(badge => {\n            // If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\n            let badgeInfo = badgeCounts.get(badge.badge_id) || {\n              count: 0,\n              name: badge.badge_name,\n              imagePath: badge.image_path\n            };\n            badgeCounts.set(badge.badge_id, {\n              ...badgeInfo,\n              count: badgeInfo.count + 1\n            });\n          });\n        });\n\n        // Find the rarest badge by looking for the minimum count\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, {\n          count: Infinity,\n          name: '',\n          imagePath: ''\n        });\n        setRarestBadge({\n          badge_name: rarestBadge.name,\n          count: rarestBadge.count,\n          image_path: rarestBadge.imagePath\n        });\n      } else {\n        console.error('Failed to fetch employee badges');\n      }\n    } catch (error) {\n      console.error('Error fetching employee badges:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchDataIfNeeded = async () => {\n      await refreshAllData();\n    };\n    fetchDataIfNeeded();\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\n  }, [user.user_id, user.user_role, user.organization_id]);\n  useEffect(() => {\n    const tempChartData = {\n      labels: [],\n      assignedCount: [],\n      completedCount: []\n    };\n    const assignmentsByEmployee = {}; // Structure to hold the count\n    trainingAssignments.forEach(assignment => {\n      if (!assignmentsByEmployee[assignment.user_id]) {\n        assignmentsByEmployee[assignment.user_id] = {\n          assigned: 0,\n          completed: 0\n        };\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\n      }\n      if (assignment.status === 'completed') {\n        assignmentsByEmployee[assignment.user_id].completed++;\n      } else {\n        assignmentsByEmployee[assignment.user_id].assigned++;\n      }\n    });\n\n    // Convert aggregated data into arrays for the chart\n    Object.values(assignmentsByEmployee).forEach(value => {\n      tempChartData.assignedCount.push(value.assigned);\n      tempChartData.completedCount.push(value.completed);\n    });\n    setChartData(tempChartData);\n    // This effect should only run when trainingAssignments change.\n\n    const moduleCompletionCounts = {}; // {moduleId: count}\n\n    trainingAssignments.forEach(assignment => {\n      if (assignment.status === 'completed') {\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\n      }\n    });\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\n      return !acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc] ? moduleId : acc;\n    }, null);\n\n    // Assuming you have a way to fetch or determine the security suggestion for a module\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\n    setSecuritySuggestion(securitySuggestion);\n  }, [trainingAssignments]);\n  useEffect(() => {\n    // Assume `employees` is already populated with badge counts\n    const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\n    const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\n    setTopBadgeEarners(earners);\n  }, [employees]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  const fetchEnrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownEnrollEmployee(data);\n  };\n  const handleEnrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedEnrollEmployee(selectedValue);\n      setDropdownEnrollModule(data);\n    } catch (error) {\n      console.error('Error fetching enroll module data:', error);\n    }\n  };\n  const handleEnrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedEnrollModule(selectedValue);\n  };\n  const fetchUnenrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownUnenrollEmployee(data);\n  };\n  const handleUnenrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedUnenrollEmployee(selectedValue);\n      setDropdownUnenrollModule(data);\n    } catch (error) {\n      console.error('Error fetching unenroll module data:', error);\n    }\n  };\n  const handleUnenrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedUnenrollModule(selectedValue);\n  };\n  const handleSetGoal = async event => {\n    event.preventDefault();\n\n    // Assuming you have the organization ID stored in the state or derived from the user's session\n    const organizationId = user.organization_id;\n    const goalData = {\n      organizationId,\n      dueDate: goalDueDate,\n      incentive: goalIncentive\n    };\n    try {\n      // Replace the URL with your actual endpoint\n      const response = await fetch('http://localhost:4000/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(goalData)\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        alert('Goal set successfully');\n        // Optionally, clear the form fields or update the UI\n      } else {\n        alert('Failed to set goal');\n      }\n    } catch (error) {\n      console.error('Error setting goal:', error);\n      alert('Error setting goal');\n    }\n  };\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\n  const [employeeVisibility, setEmployeeVisibility] = useState({});\n  function getSecuritySuggestionForModule(moduleId) {\n    // Example: Predefined suggestions\n    const suggestions = {\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\n      '4': 'General Cybersecurity could be lacking',\n      '5': 'Phishing attempts need to be educated against',\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\n      '7': 'Strong passwords for important website is crucial'\n\n      // Add more module IDs and suggestions as needed\n    };\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        borderBottom: '25px solid #17a2b8',\n        paddingBottom: '10px'\n      },\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Suggestion Based on Training Completion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: securitySuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Badges: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: Array.isArray(employee.badges) ? employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 21\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyChartComponent, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Training Completion Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TrainingOverviewPieChart, {\n        assignedCount: totalAssigned,\n        completedCount: totalCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), trainingAssignments.reduce((acc, assignment) => {\n          // Create an array of unique employee IDs\n          if (!acc.includes(assignment.user_id)) acc.push(assignment.user_id);\n          return acc;\n        }, []).map(userId => {\n          // Filter assignments for this employee\n          const employeeAssignments = trainingAssignments.filter(assignment => assignment.user_id === userId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              onClick: () => setEmployeeVisibility(prev => ({\n                ...prev,\n                [userId]: !prev[userId]\n              })),\n              style: {\n                cursor: 'pointer',\n                textAlign: 'left'\n              },\n              children: [employeeAssignments[0].first_name, \" \", employeeAssignments[0].last_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), employeeVisibility[userId] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: 'none',\n                paddingLeft: '0'\n              },\n              children: employeeAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  padding: '10px',\n                  marginBottom: '10px',\n                  backgroundColor: '#ffffff',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: assignment.module_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    padding: '5px 10px',\n                    borderRadius: '5px',\n                    color: '#ffffff',\n                    backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545'\n                  },\n                  children: assignment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 27\n                }, this)]\n              }, `${assignment.module_name}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '20px',\n          backgroundColor: '#fff',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '10px',\n              color: '#007bff'\n            },\n            children: \"Rarest Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 11\n          }, this), rarestBadge.count > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: [\"The rarest badge is \\\"\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.badge_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 36\n            }, this), \"\\\" with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 84\n            }, this), \" occurrences.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: \"Badge information is currently unavailable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }, this), rarestBadge.count > 0 && rarestBadge.image_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rarestBadge.image_path.startsWith('/') ? process.env.PUBLIC_URL + rarestBadge.image_path : rarestBadge.image_path,\n          alt: rarestBadge.badge_name,\n          style: {\n            width: '100px',\n            height: '100px',\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50px',\n            height: '50px',\n            background: '#ddd',\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textAlign: 'center',\n              color: '#666'\n            },\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Badge Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n            gap: '15px'\n          },\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              borderRadius: '5px',\n              padding: '10px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0 0 10px 0'\n              },\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"User ID: \", employee.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: employee.badges && employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    background: '#e9ecef',\n                    borderRadius: '5px',\n                    padding: '5px 10px',\n                    marginRight: '5px',\n                    marginBottom: '5px',\n                    fontSize: '14px'\n                  },\n                  children: badge.badge_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#6c757d'\n                  },\n                  children: [\"Earned on: \", new Date(badge.earned_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 29\n                }, this)]\n              }, badge.badge_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 21\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Leaderboard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: employees.sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0)).map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'bold',\n                  margin: '0'\n                },\n                children: [employee.first_name, \" \", employee.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0'\n                },\n                children: [\"Score: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enroll Employees in Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollEmployee,\n            onChange: handleEnrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollModule,\n            onChange: handleEnrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), dropdownEnrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unenroll Employees from Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollEmployee,\n            onChange: handleUnenrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollModule,\n            onChange: handleUnenrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 13\n            }, this), dropdownUnenrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unenrollEmployeeFromTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Unenroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            gap: '20px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Set a Goal for Your Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSetGoal,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalDueDate\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Goal Due Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"goalDueDate\",\n                  value: goalDueDate,\n                  onChange: e => setGoalDueDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalIncentive\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Incentive:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"goalIncentive\",\n                  value: goalIncentive,\n                  onChange: e => setGoalIncentive(e.target.value),\n                  placeholder: \"Enter incentive\",\n                  style: {\n                    width: '100%',\n                    height: '100px',\n                    resize: 'vertical',\n                    padding: '10px',\n                    borderRadius: '5px',\n                    border: '1px solid #ccc'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '12px',\n                    marginTop: '5px'\n                  },\n                  children: \"Maximum of 255 characters.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                style: {\n                  padding: '10px 20px',\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  borderRadius: '5px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'opacity 0.3s'\n                },\n                children: \"Set Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Current Incentive Winner(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: 'none',\n                paddingLeft: '0'\n              },\n              children: topBadgeEarners.map(earner => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [earner.first_name, \" \", earner.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 21\n                }, this), \" - \", earner.badges.length, \" Badges\"]\n              }, earner.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerMetricsDashboard, \"Muhz2pjgDTwS1HUQSu1jPUTb6K8=\");\n_c = ManagerMetricsDashboard;\nexport default ManagerMetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerMetricsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","TrainingOverviewPieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerMetricsDashboard","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","securitySuggestion","setSecuritySuggestion","goalDueDate","setGoalDueDate","goalIncentive","setGoalIncentive","topBadgeEarners","setTopBadgeEarners","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchEnrollEmployees","fetchUnenrollEmployees","chartData","setChartData","labels","assignedCount","completedCount","totalAssigned","reduce","acc","module","totalCompleted","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","badgeInfo","get","badge_id","name","imagePath","image_path","set","Array","from","values","val","Infinity","fetchDataIfNeeded","user_role","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","moduleCompletionCounts","module_id","leastCompletedModuleId","keys","getSecuritySuggestionForModule","maxBadgeCount","Math","max","map","emp","length","earners","filter","fetchTrainingModules","handleEnrollEmployeeChange","event","selectedValue","target","handleEnrollModuleChange","handleUnenrollEmployeeChange","handleUnenrollModuleChange","handleSetGoal","preventDefault","organizationId","goalData","dueDate","incentive","responseData","isAssignmentsVisible","setIsAssignmentsVisible","employeeVisibility","setEmployeeVisibility","suggestions","style","padding","children","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","backgroundColor","borderRadius","color","boxShadow","display","gridTemplateColumns","gap","background","margin","email","isArray","marginRight","marginBottom","fontSize","cursor","includes","userId","employeeAssignments","onClick","prev","textAlign","listStyleType","paddingLeft","justifyContent","alignItems","fontWeight","module_name","src","startsWith","process","env","PUBLIC_URL","alt","width","height","flexDirection","Date","earned_date","toLocaleDateString","sort","a","b","index","marginLeft","maxWidth","onChange","border","option","flex","onSubmit","htmlFor","type","id","e","placeholder","resize","transition","earner","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\nimport TrainingOverviewPieChart from './trainingOverviewPieChart'; // Adjust the path as necessary\r\n\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n\r\n\r\n\r\n\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\r\n\r\n  const [goalDueDate, setGoalDueDate] = useState('');\r\n  const [goalIncentive, setGoalIncentive] = useState('');\r\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n  };\r\n\r\n    const [chartData, setChartData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Number of assigned trainings per employee\r\n      completedCount: [], // Number of completed trainings per employee\r\n    });\r\n\r\n    const totalAssigned = assignedModules.reduce((acc, module) => acc + module.count, 0);\r\n    const totalCompleted = completedModules.reduce((acc, module) => acc + module.count, 0);\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge and keep track of an image path\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            // If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\r\n            let badgeInfo = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name, imagePath: badge.image_path };\r\n            badgeCounts.set(badge.badge_id, { ...badgeInfo, count: badgeInfo.count + 1 });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '', imagePath: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count, image_path: rarestBadge.imagePath });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchDataIfNeeded = async () => {\r\n      \r\n      await refreshAllData();\r\n    };\r\n  \r\n    fetchDataIfNeeded();\r\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\r\n  }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const tempChartData = {\r\n      labels: [],\r\n      assignedCount: [],\r\n      completedCount: [],\r\n    };\r\n  \r\n    const assignmentsByEmployee = {}; // Structure to hold the count\r\n    trainingAssignments.forEach(assignment => {\r\n      if (!assignmentsByEmployee[assignment.user_id]) {\r\n        assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n      }\r\n      if (assignment.status === 'completed') {\r\n        assignmentsByEmployee[assignment.user_id].completed++;\r\n      } else {\r\n        assignmentsByEmployee[assignment.user_id].assigned++;\r\n      }\r\n    });\r\n  \r\n    // Convert aggregated data into arrays for the chart\r\n    Object.values(assignmentsByEmployee).forEach(value => {\r\n      tempChartData.assignedCount.push(value.assigned);\r\n      tempChartData.completedCount.push(value.completed);\r\n    });\r\n  \r\n    setChartData(tempChartData);\r\n    // This effect should only run when trainingAssignments change.\r\n\r\n    const moduleCompletionCounts = {}; // {moduleId: count}\r\n\r\n    trainingAssignments.forEach(assignment => {\r\n      if (assignment.status === 'completed') {\r\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\r\n      }\r\n    });\r\n  \r\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\r\n      return (!acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc]) ? moduleId : acc;\r\n    }, null);\r\n  \r\n    // Assuming you have a way to fetch or determine the security suggestion for a module\r\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\r\n  \r\n    setSecuritySuggestion(securitySuggestion);\r\n\r\n\r\n  }, [trainingAssignments]);\r\n\r\n  useEffect(() => {\r\n      // Assume `employees` is already populated with badge counts\r\n      const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\r\n      const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\r\n      setTopBadgeEarners(earners);\r\n  }, [employees]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n\r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n  const handleSetGoal = async (event) => {\r\n      event.preventDefault();\r\n\r\n      // Assuming you have the organization ID stored in the state or derived from the user's session\r\n      const organizationId = user.organization_id;\r\n\r\n      const goalData = {\r\n          organizationId,\r\n          dueDate: goalDueDate,\r\n          incentive: goalIncentive\r\n      };\r\n\r\n      try {\r\n          // Replace the URL with your actual endpoint\r\n          const response = await fetch('http://localhost:4000/api/goals', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(goalData),\r\n          });\r\n\r\n          const responseData = await response.json();\r\n\r\n          if (response.ok) {\r\n              alert('Goal set successfully');\r\n              // Optionally, clear the form fields or update the UI\r\n          } else {\r\n              alert('Failed to set goal');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error setting goal:', error);\r\n          alert('Error setting goal');\r\n      }\r\n  };\r\n\r\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\r\n  const [employeeVisibility, setEmployeeVisibility] = useState({});\r\n\r\n\r\n\r\n  function getSecuritySuggestionForModule(moduleId) {\r\n    // Example: Predefined suggestions\r\n    const suggestions = {\r\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\r\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\r\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\r\n      '4': 'General Cybersecurity could be lacking',\r\n      '5': 'Phishing attempts need to be educated against',\r\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\r\n      '7': 'Strong passwords for important website is crucial'\r\n\r\n\r\n\r\n\r\n\r\n      // Add more module IDs and suggestions as needed\r\n    };\r\n  \r\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\r\n  }\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n  \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Suggestion Based on Training Completion:</h3>\r\n          <p>{securitySuggestion}</p>\r\n        </div>\r\n\r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n        <>\r\n          <h3>Training Completion Overview</h3>\r\n          <TrainingOverviewPieChart assignedCount={totalAssigned} completedCount={totalCompleted} />\r\n        </>\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h2 style={{ cursor: 'pointer' }}>\r\n              Training Assignments for My Employees\r\n          </h2>\r\n          {trainingAssignments.reduce((acc, assignment) => {\r\n            // Create an array of unique employee IDs\r\n            if (!acc.includes(assignment.user_id)) acc.push(assignment.user_id);\r\n            return acc;\r\n          }, []).map((userId) => {\r\n            // Filter assignments for this employee\r\n            const employeeAssignments = trainingAssignments.filter(assignment => assignment.user_id === userId);\r\n            return (\r\n              <div key={userId}>\r\n                <h3 onClick={() => setEmployeeVisibility(prev => ({ ...prev, [userId]: !prev[userId] }))} style={{ cursor: 'pointer', textAlign: 'left' }}>\r\n                  {employeeAssignments[0].first_name} {employeeAssignments[0].last_name} {/* Assuming first_name and last_name are available */}\r\n                </h3>\r\n                {employeeVisibility[userId] && (\r\n                  <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                    {employeeAssignments.map((assignment) => (\r\n                      <li key={`${assignment.module_name}`} style={{ \r\n                          padding: '10px', \r\n                          marginBottom: '10px',\r\n                          backgroundColor: '#ffffff',\r\n                          borderRadius: '5px',\r\n                          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                      }}>\r\n                          <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                          <span style={{ \r\n                              padding: '5px 10px', \r\n                              borderRadius: '5px', \r\n                              color: '#ffffff', \r\n                              backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\r\n                          }}>\r\n                          {assignment.status}\r\n                          </span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n\r\n\r\n\r\n      <div style={{\r\n        marginTop: '20px',\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n      }}>\r\n        <div>\r\n          <h3 style={{ marginBottom: '10px', color: '#007bff' }}>Rarest Badge</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p style={{ margin: 0 }}>\r\n              The rarest badge is \"<strong>{rarestBadge.badge_name}</strong>\" with <strong>{rarestBadge.count}</strong> occurrences.\r\n            </p>\r\n          ) : (\r\n            <p style={{ margin: 0 }}>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n        {rarestBadge.count > 0 && rarestBadge.image_path ? (\r\n          <img src={rarestBadge.image_path.startsWith('/') ? process.env.PUBLIC_URL + rarestBadge.image_path : rarestBadge.image_path} alt={rarestBadge.badge_name} style={{ width: '100px', height: '100px', borderRadius: '50%' }} />\r\n        ) : (\r\n          <div style={{ width: '50px', height: '50px', background: '#ddd', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            {/* Placeholder if no image path is available */}\r\n            <span style={{ textAlign: 'center', color: '#666' }}>?</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n\r\n\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', gap: '20px', marginTop: '20px' }}>\r\n            {/* Set a Goal for Your Employees */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Set a Goal for Your Employees</h3>\r\n              <form onSubmit={handleSetGoal}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalDueDate\" style={{ marginRight: '10px' }}>Goal Due Date:</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    id=\"goalDueDate\" \r\n                    value={goalDueDate} \r\n                    onChange={e => setGoalDueDate(e.target.value)} \r\n                  />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalIncentive\" style={{ marginRight: '10px' }}>Incentive:</label>\r\n                  <textarea\r\n                    id=\"goalIncentive\"\r\n                    value={goalIncentive}\r\n                    onChange={e => setGoalIncentive(e.target.value)}\r\n                    placeholder=\"Enter incentive\"\r\n                    style={{ width: '100%', height: '100px', resize: 'vertical', padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n                  />\r\n                  <div style={{ fontSize: '12px', marginTop: '5px' }}>Maximum of 255 characters.</div>\r\n                </div>\r\n                <button type=\"submit\" style={{\r\n                  padding: '10px 20px',\r\n                  backgroundColor: '#007bff',\r\n                  color: 'white',\r\n                  borderRadius: '5px',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  transition: 'opacity 0.3s'\r\n                }}>\r\n                  Set Goal\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            {/* Current Incentive Winner(s) */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Current Incentive Winner(s)</h3>\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                {topBadgeEarners.map(earner => (\r\n                  <li key={earner.user_id} style={{ marginBottom: '10px' }}>\r\n                    <strong>{earner.first_name} {earner.last_name}</strong> - {earner.badges.length} Badges\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}