{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\user-home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\n\n  const [badges, setBadges] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const generatePassword = (length = 12) => {\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * charset.length);\n      password += charset[randomIndex];\n    }\n    setGeneratedPassword(password);\n  };\n  const updatePassword = async () => {\n    if (!generatedPassword) return;\n    try {\n      const response = await fetch('http://localhost:4000/update-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          newPassword: generatedPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Password updated successfully!');\n        setGeneratedPassword(''); // Clear the password field after update\n      } else {\n        alert('Failed to update password');\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Error updating password');\n    }\n  };\n  useEffect(() => {\n    const fetchBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n        const data = await response.json();\n        setBadges(data);\n      } catch (error) {\n        console.error('Error fetching badges:', error);\n      }\n    };\n\n    // New function to fetch badges of employees within the manager's organization\n    const fetchEmployeeBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n        const data = await response.json();\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error('Error fetching employee badges:', error);\n        setLoading(false); // Ensure loading is set to false even if there is an error\n      }\n    };\n\n    // Call fetchBadges for all users\n    fetchBadges();\n\n    // Call fetchEmployeeBadges if the user is a manager\n    if (user.user_role === 'management') {\n      fetchEmployeeBadges();\n    } else {\n      // If not a manager, ensure loading is set to false\n      // This is necessary if no other data fetching is performed for non-managers\n      setLoading(false);\n    }\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading badges...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/TrainingModule\",\n      className: \"btn btn-default border w-15 bg-light rounded 0 text-decoration-none\",\n      children: \"Training Module Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.user_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", user.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", user.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Organization ID: \", user.organization_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", user.user_role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-generator\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generatePassword(12),\n        className: \"btn btn-primary\",\n        children: \"Generate New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), generatedPassword && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Generated Password: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: generatedPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updatePassword,\n          className: \"btn btn-success\",\n          children: \"Set as My New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Badges:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: badges.map(badge => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + badge.image_path,\n          alt: badge.badge_name,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), badge.badge_id, \" - \", badge.badge_name]\n      }, badge.badge_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-info p-3 rounded w-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First Name: \", employee.first_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Name: \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: employee.badges.map(badge =>\n            /*#__PURE__*/\n            // Assuming each employee object has a badges array\n            _jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + badge.image_path,\n                alt: badge.badge_name,\n                style: {\n                  width: '100px',\n                  height: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this), badge.badge_id, \" - \", badge.badge_name]\n            }, badge.badge_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"x+yiwiSNTpTqjW9zc4t/WNnVDC0=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserHome","_s","user","JSON","parse","localStorage","getItem","badges","setBadges","employees","setEmployees","loading","setLoading","generatedPassword","setGeneratedPassword","generatePassword","length","charset","password","i","randomIndex","Math","floor","random","updatePassword","response","fetch","method","headers","body","stringify","userId","user_id","newPassword","data","json","success","alert","error","console","fetchBadges","fetchEmployeeBadges","organization_id","user_role","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","username","email","first_name","last_name","onClick","map","badge","src","process","env","PUBLIC_URL","image_path","alt","badge_name","style","width","height","badge_id","employee","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/user-home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction UserHome() {\r\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\r\n\r\n  const [badges, setBadges] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [generatedPassword, setGeneratedPassword] = useState('');\r\n\r\n\r\n  const generatePassword = (length = 12) => {\r\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-';\r\n    let password = '';\r\n    for (let i = 0; i < length; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length);\r\n      password += charset[randomIndex];\r\n    }\r\n    setGeneratedPassword(password);\r\n  };\r\n\r\n  const updatePassword = async () => {\r\n    if (!generatedPassword) return;\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:4000/update-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, newPassword: generatedPassword }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Password updated successfully!');\r\n        setGeneratedPassword(''); // Clear the password field after update\r\n      } else {\r\n        alert('Failed to update password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      alert('Error updating password');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    \r\n    const fetchBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n        const data = await response.json();\r\n        setBadges(data);\r\n      } catch (error) {\r\n        console.error('Error fetching badges:', error);\r\n      }\r\n    };\r\n  \r\n    // New function to fetch badges of employees within the manager's organization\r\n    const fetchEmployeeBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n        const data = await response.json();\r\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\r\n        setLoading(false); // Set loading to false after fetching data\r\n      } catch (error) {\r\n        console.error('Error fetching employee badges:', error);\r\n        setLoading(false); // Ensure loading is set to false even if there is an error\r\n      }\r\n    };\r\n  \r\n    // Call fetchBadges for all users\r\n    fetchBadges();\r\n  \r\n    // Call fetchEmployeeBadges if the user is a manager\r\n    if (user.user_role === 'management') {\r\n      fetchEmployeeBadges();\r\n    } else {\r\n      // If not a manager, ensure loading is set to false\r\n      // This is necessary if no other data fetching is performed for non-managers\r\n      setLoading(false);\r\n    }\r\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\r\n  \r\n\r\n\r\n  if (loading) {\r\n    return <p>Loading badges...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Link to='/TrainingModule' className='btn btn-default border w-15 bg-light rounded 0 text-decoration-none'>Training Module Page</Link>\r\n\r\n\r\n      <h2>Welcome, {user.username}!</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>User ID: {user.user_id}</p>\r\n      <p>First Name: {user.first_name}</p>\r\n      <p>Last Name: {user.last_name}</p>\r\n      <p>Organization ID: {user.organization_id}</p>\r\n      <p>User Role: {user.user_role}</p>\r\n\r\n      \r\n      <div className='password-generator'>\r\n        <button onClick={() => generatePassword(12)} className='btn btn-primary'>\r\n          Generate New Password\r\n        </button>\r\n        {generatedPassword && (\r\n          <>\r\n            <p>Generated Password: <strong>{generatedPassword}</strong></p>\r\n            <button onClick={updatePassword} className='btn btn-success'>\r\n              Set as My New Password\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <h3>Your Badges:</h3>\r\n      <ul>\r\n        {badges.map(badge => (\r\n          <li key={badge.badge_id}>\r\n            <img src={process.env.PUBLIC_URL + badge.image_path} alt={badge.badge_name} style={{ width: '100px', height: '100px' }} />\r\n            {badge.badge_id} - {badge.badge_name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {user.user_role === 'management' && (\r\n        <div className='bg-info p-3 rounded w-25'>\r\n          <h3>Employees in Your Organization:</h3>\r\n          <ul>\r\n            {employees.map(employee => (\r\n              <li key={employee.user_id}>\r\n                <p>First Name: {employee.first_name}</p>\r\n                <p>Last Name: {employee.last_name}</p>\r\n                <p>Email: {employee.email}</p>\r\n                <p>User ID: {employee.user_id}</p>\r\n                <ul>\r\n                  {employee.badges.map(badge => ( // Assuming each employee object has a badges array\r\n                    <li key={badge.badge_id}>\r\n                      <img src={process.env.PUBLIC_URL + badge.image_path} alt={badge.badge_name} style={{ width: '100px', height: '100px' }} />\r\n                      {badge.badge_id} - {badge.badge_name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}