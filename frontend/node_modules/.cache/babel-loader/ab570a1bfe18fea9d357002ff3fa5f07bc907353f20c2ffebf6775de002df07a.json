{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julie\\\\OneDrive\\\\Desktop\\\\School\\\\semester4\\\\CS411W\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\StartModule.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StartModule = ({\n  userId,\n  moduleId\n}) => {\n  _s();\n  const [moduleContent, setModuleContent] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchModuleContent = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/module/${moduleId}`);\n        const data = await response.json();\n        setModuleContent(data);\n      } catch (error) {\n        console.error('Error fetching module content:', error);\n      }\n    };\n    fetchModuleContent();\n  }, [moduleId]);\n  const completeTraining = async moduleId => {\n    try {\n      const response = await fetch('http://localhost:4000/complete-training', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          moduleId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Training completed successfully!');\n        navigate('/TrainingModule');\n        //fetchTrainingModules(); // Refresh the modules to reflect the completion\n      } else {\n        alert('Failed to complete training.');\n      }\n    } catch (error) {\n      console.error('Error completing training:', error);\n      alert('Error completing training');\n    }\n  };\n  const gradePassword = async moduleId => {\n    var pass = document.getElementById(\"password\");\n    if (pass.value.length > 3) {\n      completeTraining(moduleId);\n    } else {\n      alert('password is too weak');\n    }\n  };\n  const endTraining = async moduleId => {\n    try {\n      const response = await fetch(`http://localhost:4000/end-training`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          moduleId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Training module ended successfully!');\n        navigate('/TrainingModule');\n      } else {\n        alert('Failed to end training module.');\n      }\n    } catch (error) {\n      console.error('Error ending training:', error);\n      alert('Error ending training');\n    }\n  };\n  if (!moduleContent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Module not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '20px'\n      },\n      children: moduleContent.module_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: moduleContent.module_link,\n      width: \"100%\",\n      height: \"400\",\n      title: moduleContent.module_type,\n      style: {\n        border: 'none',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), moduleContent.module_format === 'slides' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTraining(moduleContent.module_id),\n        style: {\n          backgroundColor: 'green',\n          color: 'white',\n          borderRadius: '5px',\n          padding: '10px 20px',\n          cursor: 'pointer',\n          border: 'none',\n          width: '100%'\n        },\n        children: \"I attest to completing this training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), moduleContent.module_format === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gradePassword(moduleContent.module_id),\n        style: {\n          backgroundColor: 'green',\n          color: 'white',\n          borderRadius: '5px',\n          padding: '10px 20px',\n          cursor: 'pointer',\n          border: 'none',\n          width: '100%'\n        },\n        children: \"This will be my password for the shown website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n_s(StartModule, \"Cv1N5o7e5HJeYBKqC1uSowwOtaQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StartModule;\nexport default StartModule;\nvar _c;\n$RefreshReg$(_c, \"StartModule\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StartModule","userId","moduleId","_s","moduleContent","setModuleContent","navigate","fetchModuleContent","response","fetch","data","json","error","console","completeTraining","method","headers","body","JSON","stringify","success","alert","gradePassword","pass","document","getElementById","value","length","endTraining","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontSize","module_name","src","module_link","width","height","title","module_type","border","marginBottom","module_format","onClick","module_id","backgroundColor","color","borderRadius","cursor","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/julie/OneDrive/Desktop/School/semester4/CS411W/CyberGuard-Pro/frontend/src/components/StartModule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst StartModule = ({ userId, moduleId }) => {\r\n    const [moduleContent, setModuleContent] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n      const fetchModuleContent = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4000/module/${moduleId}`);\r\n            const data = await response.json();\r\n            setModuleContent(data);\r\n        } catch (error) {\r\n            console.error('Error fetching module content:', error);\r\n        }\r\n      };\r\n      \r\n      fetchModuleContent();\r\n    }, [moduleId]);\r\n\r\n    const completeTraining = async (moduleId) => {\r\n        try {\r\n          const response = await fetch('http://localhost:4000/complete-training', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userId, moduleId }),\r\n          });\r\n    \r\n          const data = await response.json();\r\n          if (data.success) {\r\n            alert('Training completed successfully!');\r\n            navigate('/TrainingModule');\r\n            //fetchTrainingModules(); // Refresh the modules to reflect the completion\r\n          } else {\r\n            alert('Failed to complete training.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error completing training:', error);\r\n          alert('Error completing training');\r\n        }\r\n      };\r\n    \r\n      const gradePassword = async (moduleId) => {\r\n        var pass = document.getElementById(\"password\");\r\n        if (pass.value.length > 3)\r\n        {\r\n          completeTraining(moduleId);\r\n        }\r\n        else\r\n        {\r\n          alert('password is too weak');\r\n        }\r\n      };\r\n\r\n    const endTraining = async (moduleId) => {\r\n        try {\r\n          const response = await fetch(`http://localhost:4000/end-training`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ moduleId }),\r\n          });\r\n    \r\n          const data = await response.json();\r\n          if(data.success) {\r\n            alert('Training module ended successfully!');\r\n            navigate('/TrainingModule');\r\n          } else {\r\n            alert('Failed to end training module.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error ending training:', error);\r\n          alert('Error ending training');\r\n        }\r\n      };\r\n\r\n       \r\n    if(!moduleContent) {\r\n      return <div>Error: Module not found</div>;\r\n    }\r\n\r\n    return (\r\n      <div style={{ padding: '20px' }}>\r\n        <h2 style={{ fontSize: '20px' }}>{moduleContent.module_name}</h2>\r\n        <iframe src={moduleContent.module_link} width=\"100%\" height=\"400\" title={moduleContent.module_type} style={{ border: 'none', marginBottom: '10px' }}></iframe>\r\n        {moduleContent.module_format === 'slides' && (\r\n          <>\r\n            <button\r\n              onClick={() => completeTraining(moduleContent.module_id)}\r\n              style={{ backgroundColor: 'green', color: 'white', borderRadius: '5px', padding: '10px 20px', cursor: 'pointer', border: 'none', width: '100%' }}>\r\n              I attest to completing this training\r\n            </button>\r\n          </>\r\n        )}\r\n        {moduleContent.module_format === 'password' && (\r\n          <>\r\n            <input\r\n              type=\"password\" id=\"password\" placeholder=\"Password\" />\r\n            <button\r\n              onClick={() => gradePassword(moduleContent.module_id)}\r\n              style={{ backgroundColor: 'green', color: 'white', borderRadius: '5px', padding: '10px 20px', cursor: 'pointer', border: 'none', width: '100%' }}>\r\n              This will be my password for the shown website\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default StartModule;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}