{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macka\\\\Documents\\\\GitHub\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\QuizPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPopup({\n  onClose,\n  onSubmit\n}) {\n  _s();\n  const [score, setScore] = useState(0); // Assuming score is a simple number for this example\n\n  // Handle score change (e.g., based on user input or quiz answers)\n  const handleScoreChange = e => {\n    const newScore = parseInt(e.target.value, 10); // Convert input value to number\n    setScore(newScore);\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    onSubmit(score); // Call the onSubmit prop function with the current score\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fff',\n        padding: '20px',\n        borderRadius: '5px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: score,\n          onChange: handleScoreChange,\n          style: {\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPopup, \"dhwb4Jf0iOwsc3rUivvi1/f596M=\");\n_c = QuizPopup;\nexport default QuizPopup;\nvar _c;\n$RefreshReg$(_c, \"QuizPopup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizPopup","onClose","onSubmit","_s","score","setScore","handleScoreChange","e","newScore","parseInt","target","value","handleSubmit","preventDefault","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","children","padding","borderRadius","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","marginBottom","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/macka/Documents/GitHub/CyberGuard-Pro/frontend/src/components/QuizPopup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuizPopup({ onClose, onSubmit }) {\r\n  const [score, setScore] = useState(0); // Assuming score is a simple number for this example\r\n\r\n  // Handle score change (e.g., based on user input or quiz answers)\r\n  const handleScoreChange = (e) => {\r\n    const newScore = parseInt(e.target.value, 10); // Convert input value to number\r\n    setScore(newScore);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    onSubmit(score); // Call the onSubmit prop function with the current score\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0, 0, 0, 0.5)', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <div style={{ backgroundColor: '#fff', padding: '20px', borderRadius: '5px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <h2>Quiz</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Simple input for score, you can replace this with your actual quiz questions and logic */}\r\n          <input type=\"number\" value={score} onChange={handleScoreChange} style={{ marginBottom: '10px' }} />\r\n          <button type=\"submit\" style={{ marginRight: '10px' }}>Submit</button>\r\n          <button type=\"button\" onClick={onClose}>Close</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC;EACA,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/CN,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAMI,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBX,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA;IAAKe,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,eAAe,EAAE,oBAAoB;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,eAC9KzB,OAAA;MAAKe,KAAK,EAAE;QAAEM,eAAe,EAAE,MAAM;QAAEK,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,KAAK;QAAEL,OAAO,EAAE,MAAM;QAAEM,aAAa,EAAE,QAAQ;QAAEL,UAAU,EAAE;MAAS,CAAE;MAAAE,QAAA,gBAC5IzB,OAAA;QAAAyB,QAAA,EAAI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbhC,OAAA;QAAMG,QAAQ,EAAEU,YAAa;QAAAY,QAAA,gBAE3BzB,OAAA;UAAOiC,IAAI,EAAC,QAAQ;UAACrB,KAAK,EAAEP,KAAM;UAAC6B,QAAQ,EAAE3B,iBAAkB;UAACQ,KAAK,EAAE;YAAEoB,YAAY,EAAE;UAAO;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnGhC,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAAClB,KAAK,EAAE;YAAEqB,WAAW,EAAE;UAAO,CAAE;UAAAX,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrEhC,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACI,OAAO,EAAEnC,OAAQ;UAAAuB,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA5BQH,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}