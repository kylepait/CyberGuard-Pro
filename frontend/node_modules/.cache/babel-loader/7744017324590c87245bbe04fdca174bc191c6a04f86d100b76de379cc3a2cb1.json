{"ast":null,"code":"import React,{useState,useEffect}from'react';import MyChartComponent from'./trainingModulesBarChart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ManagerMetricsDashboard(){const[assignedModules,setAssignedModules]=useState([]);const[completedModules,setCompletedModules]=useState([]);const[allTrainings,setAllTrainings]=useState([]);const[trainingAssignments,setTrainingAssignments]=useState([]);const user=JSON.parse(localStorage.getItem('user'));const[selectedEnrollEmployee,setSelectedEnrollEmployee]=useState('');const[selectedEnrollModule,setSelectedEnrollModule]=useState('');const[dropdownEnrollEmployee,setDropdownEnrollEmployee]=useState([]);const[dropdownEnrollModule,setDropdownEnrollModule]=useState([]);const[employees,setEmployees]=useState([]);const[selectedUnenrollEmployee,setSelectedUnenrollEmployee]=useState('');const[selectedUnenrollModule,setSelectedUnenrollModule]=useState('');const[dropdownUnenrollEmployee,setDropdownUnenrollEmployee]=useState([]);const[dropdownUnenrollModule,setDropdownUnenrollModule]=useState([]);const[badges,setBadges]=useState([]);const[loading,setLoading]=useState(true);const[rarestBadge,setRarestBadge]=useState({badge_name:'',count:0});const[securitySuggestion,setSecuritySuggestion]=useState('');const[goalDueDate,setGoalDueDate]=useState('');const[goalIncentive,setGoalIncentive]=useState('');const[topBadgeEarners,setTopBadgeEarners]=useState([]);const refreshAllData=async()=>{await fetchTrainingAssignments();await fetchEmployeeBadges();await fetchAllTrainings();await fetchTrainingAssignments();await fetchBadges();await fetchEnrollEmployees();await fetchUnenrollEmployees();// Ensuring this calls the correct function to refresh employee badges\n// Include any other fetch calls needed to refresh your UI accordingly\n};const[chartData,setChartData]=useState({labels:[],// Employee names\nassignedCount:[],// Number of assigned trainings per employee\ncompletedCount:[]// Number of completed trainings per employee\n});const enrollEmployeeInTraining=async()=>{const response=await fetch('http://localhost:4000/enroll-employee-training',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({employeeUserId:selectedEnrollEmployee,moduleId:selectedEnrollModule})});const data=await response.json();if(data.success){alert('Employee enrolled successfully!');await refreshAllData();// Refresh all relevant data after a successful operation\n}else{alert('Failed to enroll employee.');}};const unenrollEmployeeFromTraining=async()=>{const response=await fetch('http://localhost:4000/unenroll-employee-training',{method:'DELETE',headers:{'Content-Type':'application/json'},body:JSON.stringify({employeeUserId:selectedUnenrollEmployee,moduleId:selectedUnenrollModule})});const data=await response.json();if(data.success){alert('Employee unenrolled successfully!');await refreshAllData();// Refresh all relevant data after a successful operation\n}else{alert('Failed to unenroll employee.');}};const fetchBadges=async()=>{try{const response=await fetch(\"http://localhost:4000/badges?user_id=\".concat(user.user_id));const data=await response.json();setBadges(data);}catch(error){console.error('Error fetching badges:',error);}};const fetchEmployeeBadges=async()=>{try{const response=await fetch(\"http://localhost:4000/badges/organization/\".concat(user.organization_id));if(response.ok){const data=await response.json();setEmployees(data);// Initialize a map to count occurrences of each badge and keep track of an image path\nlet badgeCounts=new Map();// Iterate over each employee and their badges\ndata.forEach(employee=>{employee.badges.forEach(badge=>{// If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\nlet badgeInfo=badgeCounts.get(badge.badge_id)||{count:0,name:badge.badge_name,imagePath:badge.image_path};badgeCounts.set(badge.badge_id,{...badgeInfo,count:badgeInfo.count+1});});});// Find the rarest badge by looking for the minimum count\nlet rarestBadge=Array.from(badgeCounts.values()).reduce((acc,val)=>val.count<acc.count?val:acc,{count:Infinity,name:'',imagePath:''});setRarestBadge({badge_name:rarestBadge.name,count:rarestBadge.count,image_path:rarestBadge.imagePath});}else{console.error('Failed to fetch employee badges');}}catch(error){console.error('Error fetching employee badges:',error);}};useEffect(()=>{const fetchDataIfNeeded=async()=>{await refreshAllData();};fetchDataIfNeeded();// This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\n},[user.user_id,user.user_role,user.organization_id]);useEffect(()=>{const tempChartData={labels:[],assignedCount:[],completedCount:[]};const assignmentsByEmployee={};// Structure to hold the count\ntrainingAssignments.forEach(assignment=>{if(!assignmentsByEmployee[assignment.user_id]){assignmentsByEmployee[assignment.user_id]={assigned:0,completed:0};tempChartData.labels.push(\"\".concat(assignment.first_name,\" \").concat(assignment.last_name));}if(assignment.status==='completed'){assignmentsByEmployee[assignment.user_id].completed++;}else{assignmentsByEmployee[assignment.user_id].assigned++;}});// Convert aggregated data into arrays for the chart\nObject.values(assignmentsByEmployee).forEach(value=>{tempChartData.assignedCount.push(value.assigned);tempChartData.completedCount.push(value.completed);});setChartData(tempChartData);// This effect should only run when trainingAssignments change.\nconst moduleCompletionCounts={};// {moduleId: count}\ntrainingAssignments.forEach(assignment=>{if(assignment.status==='completed'){moduleCompletionCounts[assignment.module_id]=(moduleCompletionCounts[assignment.module_id]||0)+1;}});const leastCompletedModuleId=Object.keys(moduleCompletionCounts).reduce((acc,moduleId)=>{return!acc||moduleCompletionCounts[moduleId]<moduleCompletionCounts[acc]?moduleId:acc;},null);// Assuming you have a way to fetch or determine the security suggestion for a module\nconst securitySuggestion=getSecuritySuggestionForModule(leastCompletedModuleId);setSecuritySuggestion(securitySuggestion);},[trainingAssignments]);useEffect(()=>{// Assume `employees` is already populated with badge counts\nconst maxBadgeCount=Math.max(...employees.map(emp=>emp.badges.length));const earners=employees.filter(emp=>emp.badges.length===maxBadgeCount);setTopBadgeEarners(earners);},[employees]);// Declare fetchAllTrainings outside useEffect\nconst fetchAllTrainings=async()=>{const response=await fetch('http://localhost:4000/all-trainings');const data=await response.json();setAllTrainings(data);};const fetchTrainingAssignments=async()=>{const response=await fetch(\"http://localhost:4000/training-assignments/\".concat(user.organization_id));const data=await response.json();setTrainingAssignments(data);};const fetchTrainingModules=async()=>{const response=await fetch(\"http://localhost:4000/user-training-modules?userId=\".concat(user.user_id));const data=await response.json();setAssignedModules(data.assignedModules);setCompletedModules(data.completedModules);};const fetchEnrollEmployees=async()=>{const response=await fetch(\"http://localhost:4000/employees/organization/\".concat(user.organization_id));const data=await response.json();setDropdownEnrollEmployee(data);};const handleEnrollEmployeeChange=async event=>{const selectedValue=event.target.value;try{const response=await fetch(\"http://localhost:4000/enroll-modules/\".concat(selectedValue));const data=await response.json();setSelectedEnrollEmployee(selectedValue);setDropdownEnrollModule(data);}catch(error){console.error('Error fetching enroll module data:',error);}};const handleEnrollModuleChange=async event=>{const selectedValue=event.target.value;setSelectedEnrollModule(selectedValue);};const fetchUnenrollEmployees=async()=>{const response=await fetch(\"http://localhost:4000/employees/organization/\".concat(user.organization_id));const data=await response.json();setDropdownUnenrollEmployee(data);};const handleUnenrollEmployeeChange=async event=>{const selectedValue=event.target.value;try{const response=await fetch(\"http://localhost:4000/unenroll-modules/\".concat(selectedValue));const data=await response.json();setSelectedUnenrollEmployee(selectedValue);setDropdownUnenrollModule(data);}catch(error){console.error('Error fetching unenroll module data:',error);}};const handleUnenrollModuleChange=async event=>{const selectedValue=event.target.value;setSelectedUnenrollModule(selectedValue);};const handleSetGoal=async event=>{event.preventDefault();// Assuming you have the organization ID stored in the state or derived from the user's session\nconst organizationId=user.organization_id;const goalData={organizationId,dueDate:goalDueDate,incentive:goalIncentive};try{// Replace the URL with your actual endpoint\nconst response=await fetch('http://localhost:4000/api/goals',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(goalData)});const responseData=await response.json();if(response.ok){alert('Goal set successfully');// Optionally, clear the form fields or update the UI\n}else{alert('Failed to set goal');}}catch(error){console.error('Error setting goal:',error);alert('Error setting goal');}};const[isAssignmentsVisible,setIsAssignmentsVisible]=useState(false);const[employeeVisibility,setEmployeeVisibility]=useState({});function getSecuritySuggestionForModule(moduleId){// Example: Predefined suggestions\nconst suggestions={'1':'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.','2':'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.','3':'Intro Training to CyberGuardPro is greatly help with security understanding','4':'General Cybersecurity could be lacking','5':'Phishing attempts need to be educated against','6':'It is beneficial for employees to be able to detect suspicious behavior','7':'Strong passwords for important website is crucial'// Add more module IDs and suggestions as needed\n};return suggestions[moduleId]||'No specific suggestion available. Ensure all security trainings are completed.';}return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{borderBottom:'25px solid #17a2b8',paddingBottom:'10px'},children:\"Metrics Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'15px',backgroundColor:'#f0f0f0',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Security Suggestion Based on Training Completion:\"}),/*#__PURE__*/_jsx(\"p\",{children:securitySuggestion})]}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8f9fa',padding:'20px',borderRadius:'5px',color:'#343a40',marginTop:'20px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Employees in Your Organization:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(240px, 1fr))',gap:'15px'},children:employees.map(employee=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',borderRadius:'5px',padding:'10px',boxShadow:'0 2px 4px rgba(0,0,0,0.05)'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{margin:'0 0 10px 0'},children:[employee.first_name,\" \",employee.last_name]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0'},children:[\"Email: \",employee.email]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0'},children:[\"User ID: \",employee.user_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Badges: \",Array.isArray(employee.badges)?employee.badges.length:0]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px'},children:Array.isArray(employee.badges)?employee.badges.map(badge=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#e9ecef',borderRadius:'5px',padding:'5px 10px',marginRight:'5px',marginBottom:'5px',fontSize:'14px'},children:badge.badge_name},badge.badge_id)):/*#__PURE__*/_jsx(\"p\",{children:\"No badges\"})})]},employee.user_id))})]}),/*#__PURE__*/_jsx(MyChartComponent,{chartData:chartData}),/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'40px',backgroundColor:'#f2f2f2',padding:'20px',borderRadius:'10px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{cursor:'pointer'},children:\"Training Assignments for My Employees\"}),trainingAssignments.reduce((acc,assignment)=>{// Create an array of unique employee IDs\nif(!acc.includes(assignment.user_id))acc.push(assignment.user_id);return acc;},[]).map(userId=>{// Filter assignments for this employee\nconst employeeAssignments=trainingAssignments.filter(assignment=>assignment.user_id===userId);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{onClick:()=>setEmployeeVisibility(prev=>({...prev,[userId]:!prev[userId]})),style:{cursor:'pointer',textAlign:'left'},children:[employeeAssignments[0].first_name,\" \",employeeAssignments[0].last_name,\" \"]}),employeeVisibility[userId]&&/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',paddingLeft:'0'},children:employeeAssignments.map(assignment=>/*#__PURE__*/_jsxs(\"li\",{style:{padding:'10px',marginBottom:'10px',backgroundColor:'#ffffff',borderRadius:'5px',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.05)',display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'bold'},children:assignment.module_name}),/*#__PURE__*/_jsx(\"span\",{style:{padding:'5px 10px',borderRadius:'5px',color:'#ffffff',backgroundColor:assignment.status==='completed'?'#28a745':'#dc3545'},children:assignment.status})]},\"\".concat(assignment.module_name)))})]},userId);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'20px',backgroundColor:'#fff',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0,0,0,0.1)',display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'10px',color:'#007bff'},children:\"Rarest Badge\"}),rarestBadge.count>0?/*#__PURE__*/_jsxs(\"p\",{style:{margin:0},children:[\"The rarest badge is \\\"\",/*#__PURE__*/_jsx(\"strong\",{children:rarestBadge.badge_name}),\"\\\" with \",/*#__PURE__*/_jsx(\"strong\",{children:rarestBadge.count}),\" occurrences.\"]}):/*#__PURE__*/_jsx(\"p\",{style:{margin:0},children:\"Badge information is currently unavailable.\"})]}),rarestBadge.count>0&&rarestBadge.image_path?/*#__PURE__*/_jsx(\"img\",{src:rarestBadge.image_path.startsWith('/')?process.env.PUBLIC_URL+rarestBadge.image_path:rarestBadge.image_path,alt:rarestBadge.badge_name,style:{width:'100px',height:'100px',borderRadius:'50%'}}):/*#__PURE__*/_jsx(\"div\",{style:{width:'50px',height:'50px',background:'#ddd',borderRadius:'50%',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(\"span\",{style:{textAlign:'center',color:'#666'},children:\"?\"})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8f9fa',padding:'20px',borderRadius:'5px',color:'#343a40',marginTop:'20px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Employee Badge Information:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(240px, 1fr))',gap:'15px'},children:employees.map(employee=>/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',borderRadius:'5px',padding:'10px',boxShadow:'0 2px 4px rgba(0,0,0,0.05)'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{margin:'0 0 10px 0'},children:[employee.first_name,\" \",employee.last_name]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0'},children:[\"Email: \",employee.email]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0'},children:[\"User ID: \",employee.user_id]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px'},children:employee.badges&&employee.badges.map(badge=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#e9ecef',borderRadius:'5px',padding:'5px 10px',marginRight:'5px',marginBottom:'5px',fontSize:'14px'},children:badge.badge_name}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'12px',color:'#6c757d'},children:[\"Earned on: \",new Date(badge.earned_date).toLocaleDateString()]})]},badge.badge_id))})]},employee.user_id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8f9fa',padding:'20px',borderRadius:'5px',color:'#343a40',marginTop:'20px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Employee Leaderboard:\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',paddingLeft:'0',marginTop:'20px'},children:employees.sort((a,b)=>(Array.isArray(b.badges)?b.badges.length:0)-(Array.isArray(a.badges)?a.badges.length:0)).map((employee,index)=>/*#__PURE__*/_jsxs(\"li\",{style:{padding:'10px',marginBottom:'10px',backgroundColor:index===0?'#ffd700':index===1?'#c0c0c0':index===2?'#cd7f32':'#ffffff',borderRadius:'5px',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.05)',display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'bold'},children:index+1}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',marginLeft:'10px'},children:/*#__PURE__*/_jsxs(\"p\",{style:{fontWeight:'bold',margin:'0'},children:[employee.first_name,\" \",employee.last_name]})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0'},children:[\"Score: \",Array.isArray(employee.badges)?employee.badges.length:0]})})]},employee.user_id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',backgroundColor:'#f8f9fa',padding:'20px',borderRadius:'5px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.1)',display:'grid',gridTemplateColumns:'repeat(2, 1fr)',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px',maxWidth:'300px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enroll Employees in Training\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedEnrollEmployee,onChange:handleEnrollEmployeeChange,style:{padding:'10px',borderRadius:'5px',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Employee\"}),employees.map(employee=>/*#__PURE__*/_jsxs(\"option\",{value:employee.user_id,children:[employee.first_name,\" \",employee.last_name]},employee.user_id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedEnrollModule,onChange:handleEnrollModuleChange,style:{padding:'10px',borderRadius:'5px',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Training Module\"}),dropdownEnrollModule.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.module_id,children:option.module_name},option.module_id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:enrollEmployeeInTraining,style:{padding:'10px 20px',backgroundColor:'#007bff',color:'white',borderRadius:'5px',cursor:'pointer',border:'none'},children:\"Enroll Employee\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px',maxWidth:'300px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Unenroll Employees from Training\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedUnenrollEmployee,onChange:handleUnenrollEmployeeChange,style:{padding:'10px',borderRadius:'5px',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Employee\"}),employees.map(employee=>/*#__PURE__*/_jsxs(\"option\",{value:employee.user_id,children:[employee.first_name,\" \",employee.last_name]},employee.user_id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedUnenrollModule,onChange:handleUnenrollModuleChange,style:{padding:'10px',borderRadius:'5px',border:'1px solid #ccc'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Training Module\"}),dropdownUnenrollModule.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.module_id,children:option.module_name},option.module_id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:unenrollEmployeeFromTraining,style:{padding:'10px 20px',backgroundColor:'#dc3545',color:'white',borderRadius:'5px',cursor:'pointer',border:'none'},children:\"Unenroll Employee\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',gap:'20px',marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,padding:'20px',backgroundColor:'#f0f0f0',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'20px'},children:\"Set a Goal for Your Employees\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSetGoal,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"goalDueDate\",style:{marginRight:'10px'},children:\"Goal Due Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"goalDueDate\",value:goalDueDate,onChange:e=>setGoalDueDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"goalIncentive\",style:{marginRight:'10px'},children:\"Incentive:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"goalIncentive\",value:goalIncentive,onChange:e=>setGoalIncentive(e.target.value),placeholder:\"Enter incentive\",style:{width:'100%',height:'100px',resize:'vertical',padding:'10px',borderRadius:'5px',border:'1px solid #ccc'}}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',marginTop:'5px'},children:\"Maximum of 255 characters.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{padding:'10px 20px',backgroundColor:'#007bff',color:'white',borderRadius:'5px',border:'none',cursor:'pointer',transition:'opacity 0.3s'},children:\"Set Goal\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,padding:'20px',backgroundColor:'#f0f0f0',borderRadius:'8px',boxShadow:'0 2px 4px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'20px'},children:\"Current Incentive Winner(s)\"}),/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',paddingLeft:'0'},children:topBadgeEarners.map(earner=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[earner.first_name,\" \",earner.last_name]}),\" - \",earner.badges.length,\" Badges\"]},earner.user_id))})]})]})]})]})]});}export default ManagerMetricsDashboard;","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ManagerMetricsDashboard","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","securitySuggestion","setSecuritySuggestion","goalDueDate","setGoalDueDate","goalIncentive","setGoalIncentive","topBadgeEarners","setTopBadgeEarners","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchEnrollEmployees","fetchUnenrollEmployees","chartData","setChartData","labels","assignedCount","completedCount","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","concat","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","badgeInfo","get","badge_id","name","imagePath","image_path","set","Array","from","values","reduce","acc","val","Infinity","fetchDataIfNeeded","user_role","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","moduleCompletionCounts","module_id","leastCompletedModuleId","keys","getSecuritySuggestionForModule","maxBadgeCount","Math","max","map","emp","length","earners","filter","fetchTrainingModules","handleEnrollEmployeeChange","event","selectedValue","target","handleEnrollModuleChange","handleUnenrollEmployeeChange","handleUnenrollModuleChange","handleSetGoal","preventDefault","organizationId","goalData","dueDate","incentive","responseData","isAssignmentsVisible","setIsAssignmentsVisible","employeeVisibility","setEmployeeVisibility","suggestions","style","padding","children","borderBottom","paddingBottom","marginTop","backgroundColor","borderRadius","color","boxShadow","display","gridTemplateColumns","gap","background","margin","email","isArray","marginRight","marginBottom","fontSize","cursor","includes","userId","employeeAssignments","onClick","prev","textAlign","listStyleType","paddingLeft","justifyContent","alignItems","fontWeight","module_name","src","startsWith","process","env","PUBLIC_URL","alt","width","height","flexDirection","Date","earned_date","toLocaleDateString","sort","a","b","index","marginLeft","maxWidth","onChange","border","option","flex","onSubmit","htmlFor","type","id","e","placeholder","resize","transition","earner"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\r\n\r\n  const [goalDueDate, setGoalDueDate] = useState('');\r\n  const [goalIncentive, setGoalIncentive] = useState('');\r\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n  };\r\n\r\n    const [chartData, setChartData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Number of assigned trainings per employee\r\n      completedCount: [], // Number of completed trainings per employee\r\n    });\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge and keep track of an image path\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            // If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\r\n            let badgeInfo = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name, imagePath: badge.image_path };\r\n            badgeCounts.set(badge.badge_id, { ...badgeInfo, count: badgeInfo.count + 1 });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '', imagePath: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count, image_path: rarestBadge.imagePath });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchDataIfNeeded = async () => {\r\n      \r\n      await refreshAllData();\r\n    };\r\n  \r\n    fetchDataIfNeeded();\r\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\r\n  }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const tempChartData = {\r\n      labels: [],\r\n      assignedCount: [],\r\n      completedCount: [],\r\n    };\r\n  \r\n    const assignmentsByEmployee = {}; // Structure to hold the count\r\n    trainingAssignments.forEach(assignment => {\r\n      if (!assignmentsByEmployee[assignment.user_id]) {\r\n        assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n      }\r\n      if (assignment.status === 'completed') {\r\n        assignmentsByEmployee[assignment.user_id].completed++;\r\n      } else {\r\n        assignmentsByEmployee[assignment.user_id].assigned++;\r\n      }\r\n    });\r\n  \r\n    // Convert aggregated data into arrays for the chart\r\n    Object.values(assignmentsByEmployee).forEach(value => {\r\n      tempChartData.assignedCount.push(value.assigned);\r\n      tempChartData.completedCount.push(value.completed);\r\n    });\r\n  \r\n    setChartData(tempChartData);\r\n    // This effect should only run when trainingAssignments change.\r\n\r\n    const moduleCompletionCounts = {}; // {moduleId: count}\r\n\r\n    trainingAssignments.forEach(assignment => {\r\n      if (assignment.status === 'completed') {\r\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\r\n      }\r\n    });\r\n  \r\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\r\n      return (!acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc]) ? moduleId : acc;\r\n    }, null);\r\n  \r\n    // Assuming you have a way to fetch or determine the security suggestion for a module\r\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\r\n  \r\n    setSecuritySuggestion(securitySuggestion);\r\n\r\n\r\n  }, [trainingAssignments]);\r\n\r\n  useEffect(() => {\r\n      // Assume `employees` is already populated with badge counts\r\n      const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\r\n      const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\r\n      setTopBadgeEarners(earners);\r\n  }, [employees]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n\r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n  const handleSetGoal = async (event) => {\r\n      event.preventDefault();\r\n\r\n      // Assuming you have the organization ID stored in the state or derived from the user's session\r\n      const organizationId = user.organization_id;\r\n\r\n      const goalData = {\r\n          organizationId,\r\n          dueDate: goalDueDate,\r\n          incentive: goalIncentive\r\n      };\r\n\r\n      try {\r\n          // Replace the URL with your actual endpoint\r\n          const response = await fetch('http://localhost:4000/api/goals', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(goalData),\r\n          });\r\n\r\n          const responseData = await response.json();\r\n\r\n          if (response.ok) {\r\n              alert('Goal set successfully');\r\n              // Optionally, clear the form fields or update the UI\r\n          } else {\r\n              alert('Failed to set goal');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error setting goal:', error);\r\n          alert('Error setting goal');\r\n      }\r\n  };\r\n\r\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\r\n  const [employeeVisibility, setEmployeeVisibility] = useState({});\r\n\r\n\r\n\r\n  function getSecuritySuggestionForModule(moduleId) {\r\n    // Example: Predefined suggestions\r\n    const suggestions = {\r\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\r\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\r\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\r\n      '4': 'General Cybersecurity could be lacking',\r\n      '5': 'Phishing attempts need to be educated against',\r\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\r\n      '7': 'Strong passwords for important website is crucial'\r\n\r\n\r\n\r\n\r\n\r\n      // Add more module IDs and suggestions as needed\r\n    };\r\n  \r\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\r\n  }\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n  \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Suggestion Based on Training Completion:</h3>\r\n          <p>{securitySuggestion}</p>\r\n        </div>\r\n\r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h2 style={{ cursor: 'pointer' }}>\r\n              Training Assignments for My Employees\r\n          </h2>\r\n          {trainingAssignments.reduce((acc, assignment) => {\r\n            // Create an array of unique employee IDs\r\n            if (!acc.includes(assignment.user_id)) acc.push(assignment.user_id);\r\n            return acc;\r\n          }, []).map((userId) => {\r\n            // Filter assignments for this employee\r\n            const employeeAssignments = trainingAssignments.filter(assignment => assignment.user_id === userId);\r\n            return (\r\n              <div key={userId}>\r\n                <h3 onClick={() => setEmployeeVisibility(prev => ({ ...prev, [userId]: !prev[userId] }))} style={{ cursor: 'pointer', textAlign: 'left' }}>\r\n                  {employeeAssignments[0].first_name} {employeeAssignments[0].last_name} {/* Assuming first_name and last_name are available */}\r\n                </h3>\r\n                {employeeVisibility[userId] && (\r\n                  <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                    {employeeAssignments.map((assignment) => (\r\n                      <li key={`${assignment.module_name}`} style={{ \r\n                          padding: '10px', \r\n                          marginBottom: '10px',\r\n                          backgroundColor: '#ffffff',\r\n                          borderRadius: '5px',\r\n                          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                      }}>\r\n                          <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                          <span style={{ \r\n                              padding: '5px 10px', \r\n                              borderRadius: '5px', \r\n                              color: '#ffffff', \r\n                              backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\r\n                          }}>\r\n                          {assignment.status}\r\n                          </span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n\r\n\r\n\r\n      <div style={{\r\n        marginTop: '20px',\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n      }}>\r\n        <div>\r\n          <h3 style={{ marginBottom: '10px', color: '#007bff' }}>Rarest Badge</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p style={{ margin: 0 }}>\r\n              The rarest badge is \"<strong>{rarestBadge.badge_name}</strong>\" with <strong>{rarestBadge.count}</strong> occurrences.\r\n            </p>\r\n          ) : (\r\n            <p style={{ margin: 0 }}>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n        {rarestBadge.count > 0 && rarestBadge.image_path ? (\r\n          <img src={rarestBadge.image_path.startsWith('/') ? process.env.PUBLIC_URL + rarestBadge.image_path : rarestBadge.image_path} alt={rarestBadge.badge_name} style={{ width: '100px', height: '100px', borderRadius: '50%' }} />\r\n        ) : (\r\n          <div style={{ width: '50px', height: '50px', background: '#ddd', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            {/* Placeholder if no image path is available */}\r\n            <span style={{ textAlign: 'center', color: '#666' }}>?</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n\r\n\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', gap: '20px', marginTop: '20px' }}>\r\n            {/* Set a Goal for Your Employees */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Set a Goal for Your Employees</h3>\r\n              <form onSubmit={handleSetGoal}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalDueDate\" style={{ marginRight: '10px' }}>Goal Due Date:</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    id=\"goalDueDate\" \r\n                    value={goalDueDate} \r\n                    onChange={e => setGoalDueDate(e.target.value)} \r\n                  />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalIncentive\" style={{ marginRight: '10px' }}>Incentive:</label>\r\n                  <textarea\r\n                    id=\"goalIncentive\"\r\n                    value={goalIncentive}\r\n                    onChange={e => setGoalIncentive(e.target.value)}\r\n                    placeholder=\"Enter incentive\"\r\n                    style={{ width: '100%', height: '100px', resize: 'vertical', padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n                  />\r\n                  <div style={{ fontSize: '12px', marginTop: '5px' }}>Maximum of 255 characters.</div>\r\n                </div>\r\n                <button type=\"submit\" style={{\r\n                  padding: '10px 20px',\r\n                  backgroundColor: '#007bff',\r\n                  color: 'white',\r\n                  borderRadius: '5px',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  transition: 'opacity 0.3s'\r\n                }}>\r\n                  Set Goal\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            {/* Current Incentive Winner(s) */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Current Incentive Winner(s)</h3>\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                {topBadgeEarners.map(earner => (\r\n                  <li key={earner.user_id} style={{ marginBottom: '10px' }}>\r\n                    <strong>{earner.first_name} {earner.last_name}</strong> - {earner.badges.length} Badges\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}