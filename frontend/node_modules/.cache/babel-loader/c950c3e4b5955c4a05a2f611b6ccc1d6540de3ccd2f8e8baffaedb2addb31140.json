{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julie\\\\OneDrive\\\\Desktop\\\\School\\\\semester4\\\\CS411W\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\TrainingModuleContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingModuleContent = ({\n  moduleId,\n  userId\n}) => {\n  _s();\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  useEffect(() => {\n    // Send a request to update start time in the backend when the component mounts\n    const updateStartTime = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/update-training-start-time', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId,\n            moduleId\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setStartTime(new Date());\n        } else {\n          console.error('Failed to update start time:', data.error);\n        }\n      } catch (error) {\n        console.error('Error updating start time:', error);\n      }\n    };\n    updateStartTime();\n\n    // Cleanup function to update end time when the component unmounts\n    return () => {\n      if (startTime) {\n        setEndTime(new Date());\n        // Send a request to update end time in the backend\n        updateEndTime();\n      }\n    };\n  }, []);\n  const updateEndTime = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/update-training-end-time', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          moduleId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        console.log('End time updated successfully.');\n      } else {\n        console.error('Failed to update end time:', data.error);\n      }\n    } catch (error) {\n      console.error('Error updating end time:', error);\n    }\n  };\n  const handleEndTraining = () => {\n    // Set end time when the \"End Training\" button is clicked\n    setEndTime(new Date());\n    // Update end time in the backend\n    updateEndTime();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Training Module Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the content of the training module.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEndTraining,\n      children: \"End Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(TrainingModuleContent, \"+DULdeaJ1BSZmoXsPzMaGx/v2mM=\");\n_c = TrainingModuleContent;\nexport default TrainingModuleContent;\nvar _c;\n$RefreshReg$(_c, \"TrainingModuleContent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrainingModuleContent","moduleId","userId","_s","startTime","setStartTime","endTime","setEndTime","updateStartTime","response","fetch","method","headers","body","JSON","stringify","data","json","success","Date","console","error","updateEndTime","log","handleEndTraining","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/julie/OneDrive/Desktop/School/semester4/CS411W/CyberGuard-Pro/frontend/src/components/TrainingModuleContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrainingModuleContent = ({ moduleId, userId }) => {\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Send a request to update start time in the backend when the component mounts\r\n    const updateStartTime = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/update-training-start-time', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ userId, moduleId }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setStartTime(new Date());\r\n        } else {\r\n          console.error('Failed to update start time:', data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating start time:', error);\r\n      }\r\n    };\r\n\r\n    updateStartTime();\r\n\r\n    // Cleanup function to update end time when the component unmounts\r\n    return () => {\r\n      if (startTime) {\r\n        setEndTime(new Date());\r\n        // Send a request to update end time in the backend\r\n        updateEndTime();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const updateEndTime = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/update-training-end-time', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId, moduleId }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        console.log('End time updated successfully.');\r\n      } else {\r\n        console.error('Failed to update end time:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating end time:', error);\r\n    }\r\n  };\r\n\r\n  const handleEndTraining = () => {\r\n    // Set end time when the \"End Training\" button is clicked\r\n    setEndTime(new Date());\r\n    // Update end time in the backend\r\n    updateEndTime();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the module content */}\r\n      <h2>Training Module Content</h2>\r\n      <p>This is the content of the training module.</p>\r\n      <button onClick={handleEndTraining}>End Training</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingModuleContent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}