{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function QuizPopup(_ref){let{onClose,onSubmit}=_ref;const[score,setScore]=useState(0);// Assuming score is a simple number for this example\n// Handle score change (e.g., based on user input or quiz answers)\nconst handleScoreChange=e=>{const newScore=parseInt(e.target.value,10);// Convert input value to number\nsetScore(newScore);};// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();// Prevent default form submission behavior\nonSubmit(score);// Call the onSubmit prop function with the current score\n};return/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0, 0, 0, 0.5)',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#fff',padding:'20px',borderRadius:'5px',display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quiz\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:score,onChange:handleScoreChange,style:{marginBottom:'10px'}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{marginRight:'10px'},children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,children:\"Close\"})]})]})});}export default QuizPopup;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","QuizPopup","_ref","onClose","onSubmit","score","setScore","handleScoreChange","e","newScore","parseInt","target","value","handleSubmit","preventDefault","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","children","padding","borderRadius","flexDirection","type","onChange","marginBottom","marginRight","onClick"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/QuizPopup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuizPopup({ onClose, onSubmit }) {\r\n  const [score, setScore] = useState(0); // Assuming score is a simple number for this example\r\n\r\n  // Handle score change (e.g., based on user input or quiz answers)\r\n  const handleScoreChange = (e) => {\r\n    const newScore = parseInt(e.target.value, 10); // Convert input value to number\r\n    setScore(newScore);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    onSubmit(score); // Call the onSubmit prop function with the current score\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0, 0, 0, 0.5)', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <div style={{ backgroundColor: '#fff', padding: '20px', borderRadius: '5px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <h2>Quiz</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Simple input for score, you can replace this with your actual quiz questions and logic */}\r\n          <input type=\"number\" value={score} onChange={handleScoreChange} style={{ marginBottom: '10px' }} />\r\n          <button type=\"submit\" style={{ marginRight: '10px' }}>Submit</button>\r\n          <button type=\"button\" onClick={onClose}>Close</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPopup;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAwB,IAAvB,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACtC,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAE;AAEvC;AACA,KAAM,CAAAW,iBAAiB,CAAIC,CAAC,EAAK,CAC/B,KAAM,CAAAC,QAAQ,CAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAE,EAAE,CAAC,CAAE;AAC/CN,QAAQ,CAACG,QAAQ,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAI,YAAY,CAAIL,CAAC,EAAK,CAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC,CAAE;AACpBV,QAAQ,CAACC,KAAK,CAAC,CAAE;AACnB,CAAC,CAED,mBACEP,IAAA,QAAKiB,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAC,CAAEC,eAAe,CAAE,oBAAoB,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,cAAc,CAAE,QAAS,CAAE,CAAAC,QAAA,cAC9KzB,KAAA,QAAKe,KAAK,CAAE,CAAEM,eAAe,CAAE,MAAM,CAAEK,OAAO,CAAE,MAAM,CAAEC,YAAY,CAAE,KAAK,CAAEL,OAAO,CAAE,MAAM,CAAEM,aAAa,CAAE,QAAQ,CAAEL,UAAU,CAAE,QAAS,CAAE,CAAAE,QAAA,eAC5I3B,IAAA,OAAA2B,QAAA,CAAI,MAAI,CAAI,CAAC,cACbzB,KAAA,SAAMI,QAAQ,CAAES,YAAa,CAAAY,QAAA,eAE3B3B,IAAA,UAAO+B,IAAI,CAAC,QAAQ,CAACjB,KAAK,CAAEP,KAAM,CAACyB,QAAQ,CAAEvB,iBAAkB,CAACQ,KAAK,CAAE,CAAEgB,YAAY,CAAE,MAAO,CAAE,CAAE,CAAC,cACnGjC,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAACd,KAAK,CAAE,CAAEiB,WAAW,CAAE,MAAO,CAAE,CAAAP,QAAA,CAAC,QAAM,CAAQ,CAAC,cACrE3B,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAACI,OAAO,CAAE9B,OAAQ,CAAAsB,QAAA,CAAC,OAAK,CAAQ,CAAC,EAClD,CAAC,EACJ,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAxB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}