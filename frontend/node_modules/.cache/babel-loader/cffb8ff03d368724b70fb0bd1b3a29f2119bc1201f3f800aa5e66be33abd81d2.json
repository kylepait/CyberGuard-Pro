{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyChartComponent from './trainingModulesBarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerMetricsDashboard() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rarestBadge, setRarestBadge] = useState({\n    badge_name: '',\n    count: 0\n  });\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\n  const refreshAllData = async () => {\n    await fetchTrainingAssignments();\n    await fetchEmployeeBadges();\n    await fetchAllTrainings();\n    await fetchTrainingAssignments();\n    await fetchBadges();\n    await fetchEnrollEmployees();\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\n    // Include any other fetch calls needed to refresh your UI accordingly\n  };\n  const [chartData, setChartData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Number of assigned trainings per employee\n    completedCount: [] // Number of completed trainings per employee\n  });\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEnrollEmployee,\n        moduleId: selectedEnrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  const unenrollEmployeeFromTraining = async () => {\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedUnenrollEmployee,\n        moduleId: selectedUnenrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee unenrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to unenroll employee.');\n    }\n  };\n  const fetchBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n      const data = await response.json();\n      setBadges(data);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n    }\n  };\n  const fetchEmployeeBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data);\n\n        // Initialize a map to count occurrences of each badge\n        let badgeCounts = new Map();\n\n        // Iterate over each employee and their badges\n        data.forEach(employee => {\n          employee.badges.forEach(badge => {\n            let count = badgeCounts.get(badge.badge_id) || {\n              count: 0,\n              name: badge.badge_name\n            };\n            badgeCounts.set(badge.badge_id, {\n              count: count.count + 1,\n              name: badge.badge_name\n            });\n          });\n        });\n\n        // Find the rarest badge by looking for the minimum count\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, {\n          count: Infinity,\n          name: ''\n        });\n        setRarestBadge({\n          badge_name: rarestBadge.name,\n          count: rarestBadge.count\n        });\n      } else {\n        console.error('Failed to fetch employee badges');\n      }\n    } catch (error) {\n      console.error('Error fetching employee badges:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchDataIfNeeded = async () => {\n      await refreshAllData();\n    };\n    fetchDataIfNeeded();\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\n  }, [user.user_id, user.user_role, user.organization_id]);\n  useEffect(() => {\n    const tempChartData = {\n      labels: [],\n      assignedCount: [],\n      completedCount: []\n    };\n    const assignmentsByEmployee = {}; // Structure to hold the count\n    trainingAssignments.forEach(assignment => {\n      if (!assignmentsByEmployee[assignment.user_id]) {\n        assignmentsByEmployee[assignment.user_id] = {\n          assigned: 0,\n          completed: 0\n        };\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\n      }\n      if (assignment.status === 'completed') {\n        assignmentsByEmployee[assignment.user_id].completed++;\n      } else {\n        assignmentsByEmployee[assignment.user_id].assigned++;\n      }\n    });\n\n    // Convert aggregated data into arrays for the chart\n    Object.values(assignmentsByEmployee).forEach(value => {\n      tempChartData.assignedCount.push(value.assigned);\n      tempChartData.completedCount.push(value.completed);\n    });\n    setChartData(tempChartData);\n    // This effect should only run when trainingAssignments change.\n\n    const moduleCompletionCounts = {}; // {moduleId: count}\n\n    trainingAssignments.forEach(assignment => {\n      if (assignment.status === 'completed') {\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\n      }\n    });\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\n      return !acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc] ? moduleId : acc;\n    }, null);\n\n    // Assuming you have a way to fetch or determine the security suggestion for a module\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\n    setSecuritySuggestion(securitySuggestion);\n  }, [trainingAssignments]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  const fetchEnrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownEnrollEmployee(data);\n  };\n  const fetchUnenrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownUnenrollEmployee(data);\n  };\n  const handleEnrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedEnrollEmployee(selectedValue);\n      setDropdownEnrollModule(data);\n    } catch (error) {\n      console.error('Error fetching enroll module data:', error);\n    }\n  };\n  const handleUnenrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedUnenrollEmployee(selectedValue);\n      setDropdownUnenrollModule(data);\n    } catch (error) {\n      console.error('Error fetching unenroll module data:', error);\n    }\n  };\n  const handleEnrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedEnrollModule(selectedValue);\n  };\n  const handleUnenrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedUnenrollModule(selectedValue);\n  };\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\n  function getSecuritySuggestionForModule(moduleId) {\n    // Example: Predefined suggestions\n    const suggestions = {\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\n      '4': 'General Cybersecurity could be lacking',\n      '5': 'Phishing attempts need to be educated against',\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\n      '7': 'Strong passwords for important website is crucial'\n\n      // Add more module IDs and suggestions as needed\n    };\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        borderBottom: '25px solid #17a2b8',\n        paddingBottom: '10px'\n      },\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Suggestion Based on Training Completion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: securitySuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Badges: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: Array.isArray(employee.badges) ? employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyChartComponent, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => setIsAssignmentsVisible(!isAssignmentsVisible),\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), isAssignmentsVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: trainingAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: `${assignment.first_name} ${assignment.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: assignment.module_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: '5px 10px',\n                borderRadius: '5px',\n                color: '#ffffff',\n                backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545'\n              },\n              children: assignment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 27\n            }, this)]\n          }, `${assignment.user_id}-${assignment.module_name}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rarest Badge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), rarestBadge.count > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The rarest badge is \\\"\", rarestBadge.badge_name, \"\\\" with \", rarestBadge.count, \" occurrences.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Badge information is currently unavailable.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Badge Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n            gap: '15px'\n          },\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              borderRadius: '5px',\n              padding: '10px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0 0 10px 0'\n              },\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"User ID: \", employee.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: employee.badges && employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    background: '#e9ecef',\n                    borderRadius: '5px',\n                    padding: '5px 10px',\n                    marginRight: '5px',\n                    marginBottom: '5px',\n                    fontSize: '14px'\n                  },\n                  children: badge.badge_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#6c757d'\n                  },\n                  children: [\"Earned on: \", new Date(badge.earned_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 29\n                }, this)]\n              }, badge.badge_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Leaderboard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: employees.sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0)).map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'bold',\n                  margin: '0'\n                },\n                children: [employee.first_name, \" \", employee.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0',\n                  fontSize: '12px'\n                },\n                children: [\"User ID: \", employee.user_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0'\n                },\n                children: [\"Score: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enroll Employees in Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollEmployee,\n            onChange: handleEnrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollModule,\n            onChange: handleEnrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), dropdownEnrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unenroll Employees from Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollEmployee,\n            onChange: handleUnenrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollModule,\n            onChange: handleUnenrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 13\n            }, this), dropdownUnenrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unenrollEmployeeFromTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Unenroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerMetricsDashboard, \"5k1f4xaPRwXww+43/DfzUVOxJn4=\");\n_c = ManagerMetricsDashboard;\nexport default ManagerMetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerMetricsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerMetricsDashboard","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","securitySuggestion","setSecuritySuggestion","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchEnrollEmployees","fetchUnenrollEmployees","chartData","setChartData","labels","assignedCount","completedCount","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","get","badge_id","name","set","Array","from","values","reduce","acc","val","Infinity","fetchDataIfNeeded","user_role","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","moduleCompletionCounts","module_id","leastCompletedModuleId","keys","getSecuritySuggestionForModule","fetchTrainingModules","handleEnrollEmployeeChange","event","selectedValue","target","handleUnenrollEmployeeChange","handleEnrollModuleChange","handleUnenrollModuleChange","isAssignmentsVisible","setIsAssignmentsVisible","suggestions","style","padding","children","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","backgroundColor","borderRadius","color","boxShadow","display","gridTemplateColumns","gap","map","background","margin","email","isArray","length","marginRight","marginBottom","fontSize","onClick","cursor","listStyleType","paddingLeft","justifyContent","alignItems","fontWeight","module_name","flexDirection","Date","earned_date","toLocaleDateString","sort","a","b","index","marginLeft","maxWidth","onChange","border","option","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\r\n\r\n\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n  };\r\n\r\n    const [chartData, setChartData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Number of assigned trainings per employee\r\n      completedCount: [], // Number of completed trainings per employee\r\n    });\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            let count = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name };\r\n            badgeCounts.set(badge.badge_id, { count: count.count + 1, name: badge.badge_name });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchDataIfNeeded = async () => {\r\n      \r\n      await refreshAllData();\r\n    };\r\n  \r\n    fetchDataIfNeeded();\r\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\r\n  }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const tempChartData = {\r\n      labels: [],\r\n      assignedCount: [],\r\n      completedCount: [],\r\n    };\r\n  \r\n    const assignmentsByEmployee = {}; // Structure to hold the count\r\n    trainingAssignments.forEach(assignment => {\r\n      if (!assignmentsByEmployee[assignment.user_id]) {\r\n        assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n      }\r\n      if (assignment.status === 'completed') {\r\n        assignmentsByEmployee[assignment.user_id].completed++;\r\n      } else {\r\n        assignmentsByEmployee[assignment.user_id].assigned++;\r\n      }\r\n    });\r\n  \r\n    // Convert aggregated data into arrays for the chart\r\n    Object.values(assignmentsByEmployee).forEach(value => {\r\n      tempChartData.assignedCount.push(value.assigned);\r\n      tempChartData.completedCount.push(value.completed);\r\n    });\r\n  \r\n    setChartData(tempChartData);\r\n    // This effect should only run when trainingAssignments change.\r\n\r\n    const moduleCompletionCounts = {}; // {moduleId: count}\r\n\r\n    trainingAssignments.forEach(assignment => {\r\n      if (assignment.status === 'completed') {\r\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\r\n      }\r\n    });\r\n  \r\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\r\n      return (!acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc]) ? moduleId : acc;\r\n    }, null);\r\n  \r\n    // Assuming you have a way to fetch or determine the security suggestion for a module\r\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\r\n  \r\n    setSecuritySuggestion(securitySuggestion);\r\n\r\n\r\n  }, [trainingAssignments]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n  \r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\r\n\r\n\r\n  function getSecuritySuggestionForModule(moduleId) {\r\n    // Example: Predefined suggestions\r\n    const suggestions = {\r\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\r\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\r\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\r\n      '4': 'General Cybersecurity could be lacking',\r\n      '5': 'Phishing attempts need to be educated against',\r\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\r\n      '7': 'Strong passwords for important website is crucial'\r\n\r\n\r\n\r\n\r\n\r\n      // Add more module IDs and suggestions as needed\r\n    };\r\n  \r\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\r\n  }\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n  \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Suggestion Based on Training Completion:</h3>\r\n          <p>{securitySuggestion}</p>\r\n        </div>\r\n\r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h2 onClick={() => setIsAssignmentsVisible(!isAssignmentsVisible)} style={{ cursor: 'pointer' }}>\r\n              Training Assignments for My Employees\r\n          </h2>\r\n          {isAssignmentsVisible && (\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n                  {trainingAssignments.map((assignment) => (\r\n                      <li key={`${assignment.user_id}-${assignment.module_name}`} style={{ \r\n                          padding: '10px', \r\n                          marginBottom: '10px',\r\n                          backgroundColor: '#ffffff',\r\n                          borderRadius: '5px',\r\n                          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                      }}>\r\n                          <span style={{ fontWeight: 'bold' }}>{`${assignment.first_name} ${assignment.last_name}`}</span>  \r\n                          <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                          <span style={{ \r\n                              padding: '5px 10px', \r\n                              borderRadius: '5px', \r\n                              color: '#ffffff', \r\n                              backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\r\n                          }}>\r\n                          {assignment.status}\r\n                          </span>\r\n                      </li>\r\n                  ))}\r\n              </ul>\r\n          )}\r\n      </div>\r\n\r\n\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Rarest Badge:</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p>The rarest badge is \"{rarestBadge.badge_name}\" with {rarestBadge.count} occurrences.</p>\r\n          ) : (\r\n            <p>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                  <p style={{ margin: '0', fontSize: '12px' }}>User ID: {employee.user_id}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}