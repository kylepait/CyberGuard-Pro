{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\user-home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [badges, setBadges] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBadgesAndEmployees = async () => {\n      try {\n        // Adjust this call if necessary to match your updated backend logic\n        const badgesResponse = await fetch(`http://localhost:4000/badges?organization_id=${user.organization_id}`);\n        const badgesData = await badgesResponse.json();\n        setBadges(badgesData);\n\n        // Fetch employees if user is in management\n        if (user.user_role === 'management') {\n          const employeesResponse = await fetch(`http://localhost:4000/employees?organization_id=${user.organization_id}`);\n          const employeesData = await employeesResponse.json();\n          setEmployees(employeesData);\n        }\n        setLoading(false); // Mark loading as false once badges and employees are fetched\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false); // Mark loading as false in case of error\n      }\n    };\n    fetchBadgesAndEmployees();\n  }, [user.organization_id, user.user_role]); // Update dependencies as needed\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading badges and employees...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-info p-3 rounded w-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First Name: \", employee.first_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Name: \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: badges.filter(badge => badge.user_id === employee.user_id).map(badge => /*#__PURE__*/_jsxDEV(\"li\", {}, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"/w3Eu70YhaitA7/vvDbWaUdRt/8=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","UserHome","_s","user","JSON","parse","localStorage","getItem","badges","setBadges","employees","setEmployees","loading","setLoading","fetchBadgesAndEmployees","badgesResponse","fetch","organization_id","badgesData","json","user_role","employeesResponse","employeesData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","employee","first_name","last_name","email","user_id","filter","badge","badge_id","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/user-home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction UserHome() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  const [badges, setBadges] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBadgesAndEmployees = async () => {\r\n      try {\r\n        // Adjust this call if necessary to match your updated backend logic\r\n        const badgesResponse = await fetch(`http://localhost:4000/badges?organization_id=${user.organization_id}`);\r\n        const badgesData = await badgesResponse.json();\r\n        setBadges(badgesData);\r\n\r\n        // Fetch employees if user is in management\r\n        if (user.user_role === 'management') {\r\n          const employeesResponse = await fetch(`http://localhost:4000/employees?organization_id=${user.organization_id}`);\r\n          const employeesData = await employeesResponse.json();\r\n          setEmployees(employeesData);\r\n        }\r\n\r\n        setLoading(false); // Mark loading as false once badges and employees are fetched\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // Mark loading as false in case of error\r\n      }\r\n    };\r\n\r\n    fetchBadgesAndEmployees();\r\n  }, [user.organization_id, user.user_role]); // Update dependencies as needed\r\n\r\n  if (loading) {\r\n    return <p>Loading badges and employees...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Your existing code up to the employee list */}\r\n\r\n      {user.user_role === 'management' && (\r\n        <div className='bg-info p-3 rounded w-25'>\r\n          <h3>Employees in Your Organization:</h3>\r\n          <ul>\r\n            {employees.map(employee => (\r\n              <li key={employee.user_id}>\r\n                <p>First Name: {employee.first_name}</p>\r\n                <p>Last Name: {employee.last_name}</p>\r\n                <p>Email: {employee.email}</p>\r\n                <p>User ID: {employee.user_id}</p>\r\n                <ul>\r\n                  {badges\r\n                    .filter(badge => badge.user_id === employee.user_id)\r\n                    .map(badge => (\r\n                      <li key={badge.badge_id}>\r\n                        {/* Your existing badge display logic */}\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}