{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\triviaGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport questions from './questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TriviaGame = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const awardPerfectScoreBadge = async () => {\n    const badgeId = 'ID_OF_THE_PERFECT_SCORE_BADGE'; // Replace with actual badge ID for perfect score\n    try {\n      const response = await fetch('http://localhost:4000/add-badge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          badgeId\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        console.error('Failed to award perfect score badge.');\n      }\n    } catch (error) {\n      console.error('Error awarding perfect score badge:', error);\n    }\n  };\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestionIndex + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n      if (score + 1 === questions.length) {\n        // Plus one because we haven't updated the state yet\n        awardPerfectScoreBadge();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", questions.length, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option === questions[currentQuestionIndex].answer),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TriviaGame, \"8uSNClkz9xFJ38si37WZ6kWXRe8=\");\n_c = TriviaGame;\nexport default TriviaGame;\nvar _c;\n$RefreshReg$(_c, \"TriviaGame\");","map":{"version":3,"names":["React","useState","useEffect","questions","jsxDEV","_jsxDEV","Fragment","_Fragment","TriviaGame","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScore","setShowScore","user","JSON","parse","localStorage","getItem","awardPerfectScoreBadge","badgeId","response","fetch","method","headers","body","stringify","userId","user_id","data","json","success","console","error","handleAnswerOptionClick","isCorrect","nextQuestion","length","className","children","onClick","window","location","reload","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","answer","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/triviaGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport questions from './questions.json';\r\n\r\nconst TriviaGame = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  const awardPerfectScoreBadge = async () => {\r\n    const badgeId = 'ID_OF_THE_PERFECT_SCORE_BADGE'; // Replace with actual badge ID for perfect score\r\n    try {\r\n      const response = await fetch('http://localhost:4000/add-badge', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, badgeId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!data.success) {\r\n        console.error('Failed to award perfect score badge.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error awarding perfect score badge:', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestionIndex + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestionIndex(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n      if (score + 1 === questions.length) { // Plus one because we haven't updated the state yet\r\n        awardPerfectScoreBadge();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='app'>\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {questions.length}\r\n          <button onClick={() => window.location.reload()}>Play Again</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestionIndex + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className='question-text'>{questions[currentQuestionIndex].question}</div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n              <button key={index} onClick={() => handleAnswerOptionClick(option === questions[currentQuestionIndex].answer)}>\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TriviaGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}