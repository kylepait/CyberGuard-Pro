{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\user-home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\n\n  const [badges, setBadges] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const generatePassword = (length = 12) => {\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * charset.length);\n      password += charset[randomIndex];\n    }\n    setGeneratedPassword(password);\n  };\n  const updatePassword = async () => {\n    if (!generatedPassword) return;\n    try {\n      const response = await fetch('http://localhost:4000/update-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          newPassword: generatedPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Password updated successfully!');\n        setGeneratedPassword(''); // Clear the password field after update\n      } else {\n        alert('Failed to update password');\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Error updating password');\n    }\n  };\n  const awardBadge = async badgeId => {\n    try {\n      const response = await fetch('http://localhost:4000/add-badge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          badgeId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Badge awarded successfully!');\n      } else {\n        alert('Failed to award Badge.');\n      }\n    } catch (error) {\n      console.error('Error awarding Badge:', error);\n      alert('Error awarding Badge');\n    }\n  };\n  useEffect(() => {\n    const fetchBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n        const data = await response.json();\n        setBadges(data);\n      } catch (error) {\n        console.error('Error fetching badges:', error);\n      }\n    };\n\n    // New function to fetch badges of employees within the manager's organization\n    const fetchEmployeeBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n        const data = await response.json();\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error('Error fetching employee badges:', error);\n        setLoading(false); // Ensure loading is set to false even if there is an error\n      }\n    };\n\n    // Call fetchBadges for all users\n    fetchBadges();\n\n    // Call fetchEmployeeBadges if the user is a manager\n    if (user.user_role === 'management') {\n      fetchEmployeeBadges();\n    } else {\n      // If not a manager, ensure loading is set to false\n      // This is necessary if no other data fetching is performed for non-managers\n      setLoading(false);\n    }\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading badges...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/TrainingModule\",\n      style: {\n        margin: '10px 0',\n        display: 'inline-block',\n        textDecoration: 'none',\n        padding: '10px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        borderRadius: '5px'\n      },\n      children: \"Training Module Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginBottom: '20px',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          backgroundColor: '#ffffff',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", user.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"First Name: \", user.first_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Name: \", user.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Organization ID: \", user.organization_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Role: \", user.user_role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          backgroundColor: '#ffffff',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Badges:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0'\n          },\n          children: badges.map(badge => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + badge.image_path,\n              alt: badge.badge_name,\n              style: {\n                width: '100px',\n                height: '100px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), badge.badge_id, \" - \", badge.badge_name]\n          }, badge.badge_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-generator\",\n      style: {\n        backgroundColor: '#ffffff',\n        padding: '20px',\n        borderRadius: '5px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          generatePassword(12);\n          awardBadge(4);\n        },\n        style: {\n          marginRight: '10px',\n          padding: '10px 15px',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), generatedPassword && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Generated Password: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: generatedPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updatePassword,\n          style: {\n            padding: '10px 15px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Set as My New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this), user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#17a2b8',\n        padding: '20px',\n        borderRadius: '5px',\n        color: 'white',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          paddingLeft: '0'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First Name: \", employee.first_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Name: \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              paddingLeft: '20px'\n            },\n            children: employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + badge.image_path,\n                alt: badge.badge_name,\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  marginRight: '10px',\n                  verticalAlign: 'middle'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this), badge.badge_id, \" - \", badge.badge_name]\n            }, badge.badge_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"x+yiwiSNTpTqjW9zc4t/WNnVDC0=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserHome","_s","user","JSON","parse","localStorage","getItem","badges","setBadges","employees","setEmployees","loading","setLoading","generatedPassword","setGeneratedPassword","generatePassword","length","charset","password","i","randomIndex","Math","floor","random","updatePassword","response","fetch","method","headers","body","stringify","userId","user_id","newPassword","data","json","success","alert","error","console","awardBadge","badgeId","fetchBadges","fetchEmployeeBadges","organization_id","user_role","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","fontFamily","to","display","textDecoration","padding","backgroundColor","color","borderRadius","marginBottom","gap","flex","boxShadow","username","email","first_name","last_name","listStyleType","paddingLeft","map","badge","src","process","env","PUBLIC_URL","image_path","alt","badge_name","width","height","marginRight","badge_id","className","onClick","border","cursor","marginTop","employee","verticalAlign","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/user-home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction UserHome() {\r\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\r\n\r\n  const [badges, setBadges] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [generatedPassword, setGeneratedPassword] = useState('');\r\n\r\n\r\n  const generatePassword = (length = 12) => {\r\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+=-';\r\n    let password = '';\r\n    for (let i = 0; i < length; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length);\r\n      password += charset[randomIndex];\r\n    }\r\n    setGeneratedPassword(password);\r\n  };\r\n\r\n  const updatePassword = async () => {\r\n    if (!generatedPassword) return;\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:4000/update-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, newPassword: generatedPassword }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Password updated successfully!');\r\n        setGeneratedPassword(''); // Clear the password field after update\r\n      } else {\r\n        alert('Failed to update password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      alert('Error updating password');\r\n    }\r\n  };\r\n\r\n  const awardBadge = async (badgeId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/add-badge', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, badgeId }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Badge awarded successfully!');\r\n      } else {\r\n        alert('Failed to award Badge.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error awarding Badge:', error);\r\n      alert('Error awarding Badge');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    \r\n    const fetchBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n        const data = await response.json();\r\n        setBadges(data);\r\n      } catch (error) {\r\n        console.error('Error fetching badges:', error);\r\n      }\r\n    };\r\n  \r\n    // New function to fetch badges of employees within the manager's organization\r\n    const fetchEmployeeBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n        const data = await response.json();\r\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\r\n        setLoading(false); // Set loading to false after fetching data\r\n      } catch (error) {\r\n        console.error('Error fetching employee badges:', error);\r\n        setLoading(false); // Ensure loading is set to false even if there is an error\r\n      }\r\n    };\r\n  \r\n    // Call fetchBadges for all users\r\n    fetchBadges();\r\n  \r\n    // Call fetchEmployeeBadges if the user is a manager\r\n    if (user.user_role === 'management') {\r\n      fetchEmployeeBadges();\r\n    } else {\r\n      // If not a manager, ensure loading is set to false\r\n      // This is necessary if no other data fetching is performed for non-managers\r\n      setLoading(false);\r\n    }\r\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\r\n  \r\n\r\n\r\n  if (loading) {\r\n    return <p>Loading badges...</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n\r\n    <Link to='/TrainingModule' style={{ margin: '10px 0', display: 'inline-block', textDecoration: 'none', padding: '10px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px' }}>\r\n      Training Module Page\r\n    </Link>\r\n\r\n    <div style={{ display: 'flex', marginBottom: '20px', gap: '20px' }}>\r\n      <div style={{ flex: 1, backgroundColor: '#ffffff', padding: '20px', borderRadius: '5px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\r\n        <h2>Welcome, {user.username}!</h2>\r\n        <p>Email: {user.email}</p>\r\n        <p>User ID: {user.user_id}</p>\r\n        <p>First Name: {user.first_name}</p>\r\n        <p>Last Name: {user.last_name}</p>\r\n        <p>Organization ID: {user.organization_id}</p>\r\n        <p>User Role: {user.user_role}</p>\r\n      </div>\r\n\r\n      <div style={{ flex: 1, backgroundColor: '#ffffff', padding: '20px', borderRadius: '5px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>\r\n        <h3>Your Badges:</h3>\r\n        <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n          {badges.map(badge => (\r\n            <li key={badge.badge_id} style={{ marginBottom: '10px' }}>\r\n              <img src={process.env.PUBLIC_URL + badge.image_path} alt={badge.badge_name} style={{ width: '100px', height: '100px', marginRight: '10px' }} />\r\n              {badge.badge_id} - {badge.badge_name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div className='password-generator' style={{ backgroundColor: '#ffffff', padding: '20px', borderRadius: '5px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)', marginBottom: '20px' }}>\r\n      <button onClick={() => { generatePassword(12); awardBadge(4); }} style={{ marginRight: '10px', padding: '10px 15px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n        Generate Password\r\n      </button>\r\n      {generatedPassword && (\r\n        <>\r\n          <p>Generated Password: <strong>{generatedPassword}</strong></p>\r\n          <button onClick={updatePassword} style={{ padding: '10px 15px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\r\n            Set as My New Password\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n\r\n      {user.user_role === 'management' && (\r\n        <div style={{ backgroundColor: '#17a2b8', padding: '20px', borderRadius: '5px', color: 'white', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' }}>\r\n          <h3>Employees in Your Organization:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n            {employees.map(employee => (\r\n              <li key={employee.user_id} style={{ marginBottom: '10px' }}>\r\n                <p>First Name: {employee.first_name}</p>\r\n                <p>Last Name: {employee.last_name}</p>\r\n                <p>Email: {employee.email}</p>\r\n                <p>User ID: {employee.user_id}</p>\r\n                <ul style={{ listStyleType: 'none', paddingLeft: '20px' }}>\r\n                  {employee.badges.map(badge => (\r\n                    <li key={badge.badge_id}>\r\n                      <img src={process.env.PUBLIC_URL + badge.image_path} alt={badge.badge_name} style={{ width: '100px', height: '100px', marginRight: '10px', verticalAlign: 'middle' }} />\r\n                      {badge.badge_id} - {badge.badge_name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}