{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TrainingModulesPage() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [selectedModule, setSelectedModule] = useState('');\n  const [employees, setEmployees] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEmployee,\n        moduleId: selectedModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      // Optionally: Refresh the list of enrolled trainings\n      fetchTrainingAssignments(); // Call this function to refresh assignments\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  useEffect(() => {\n    fetchAllTrainings();\n    if (user.user_role === 'management') {\n      fetchTrainingAssignments();\n    }\n    fetchTrainingModules();\n    const fetchEmployees = async () => {\n      if (user.user_role === 'management') {\n        const url = `http://localhost:4000/employees/organization/${user.organization_id}`; // Updated URL to match the new endpoint\n        const response = await fetch(url);\n        const data = await response.json();\n        setEmployees(data);\n      }\n    };\n    fetchEmployees();\n    const fetchBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n        const data = await response.json();\n        setBadges(data);\n      } catch (error) {\n        console.error('Error fetching badges:', error);\n      }\n    };\n\n    // New function to fetch badges of employees within the manager's organization\n    const fetchEmployeeBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n        const data = await response.json();\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error('Error fetching employee badges:', error);\n        setLoading(false); // Ensure loading is set to false even if there is an error\n      }\n    };\n\n    // Call fetchBadges for all users\n    fetchBadges();\n\n    // Call fetchEmployeeBadges if the user is a manager\n    if (user.user_role === 'management') {\n      fetchEmployeeBadges();\n    } else {\n      // If not a manager, ensure loading is set to false\n      // This is necessary if no other data fetching is performed for non-managers\n      setLoading(false);\n    }\n  }, [user.user_id, user.user_role, user.organization_id]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const enrollInTraining = async moduleId => {\n    const response = await fetch('http://localhost:4000/enroll-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.user_id,\n        moduleId: moduleId\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Enrolled successfully!');\n      fetchAllTrainings(); // This function is now accessible here\n      fetchTrainingModules();\n    } else {\n      alert('Failed to enroll.');\n    }\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#17a2b8'\n        },\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0'\n          },\n          children: trainingAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px 0'\n            },\n            children: [`${assignment.first_name} ${assignment.last_name}`, \" - \", assignment.module_name, \" (\", assignment.status, \")\"]\n          }, `${assignment.user_id}-${assignment.module_name}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enroll Employees in Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEmployee,\n            onChange: e => setSelectedEmployee(e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedModule,\n            onChange: e => setSelectedModule(e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), allTrainings.map(module => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: module.module_id,\n              children: module.module_name\n            }, module.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainingModulesPage, \"RZlAEKHVCkYJuTjVN0dpMf4VNPs=\");\n_c = TrainingModulesPage;\nexport default TrainingModulesPage;\nvar _c;\n$RefreshReg$(_c, \"TrainingModulesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TrainingModulesPage","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEmployee","setSelectedEmployee","selectedModule","setSelectedModule","employees","setEmployees","badges","setBadges","loading","setLoading","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","fetchTrainingAssignments","fetchAllTrainings","user_role","fetchTrainingModules","fetchEmployees","url","organization_id","fetchBadges","user_id","error","console","fetchEmployeeBadges","enrollInTraining","userId","style","padding","children","backgroundColor","borderRadius","color","marginTop","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","map","employee","background","margin","first_name","last_name","email","badge","marginRight","marginBottom","fontSize","badge_name","badge_id","listStyleType","paddingLeft","assignment","module_name","status","flexDirection","maxWidth","value","onChange","e","target","border","module","module_id","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TrainingModulesPage() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEmployee, setSelectedEmployee] = useState('');\r\n  const [selectedModule, setSelectedModule] = useState('');\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  \r\n\r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  \r\n\r\n  const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEmployee, moduleId: selectedModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          // Optionally: Refresh the list of enrolled trainings\r\n          fetchTrainingAssignments(); // Call this function to refresh assignments\r\n\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n      fetchAllTrainings();\r\n    \r\n      if (user.user_role === 'management') {\r\n        fetchTrainingAssignments();\r\n      }\r\n      fetchTrainingModules();\r\n\r\n      const fetchEmployees = async () => {\r\n        if (user.user_role === 'management') {\r\n          const url = `http://localhost:4000/employees/organization/${user.organization_id}`; // Updated URL to match the new endpoint\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          setEmployees(data);\r\n        }\r\n      };\r\n      \r\n      fetchEmployees();\r\n\r\n\r\n\r\n      const fetchBadges = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n          const data = await response.json();\r\n          setBadges(data);\r\n        } catch (error) {\r\n          console.error('Error fetching badges:', error);\r\n        }\r\n      };\r\n    \r\n      // New function to fetch badges of employees within the manager's organization\r\n      const fetchEmployeeBadges = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n          const data = await response.json();\r\n          setEmployees(data); // Assuming the endpoint returns structured data as discussed\r\n          setLoading(false); // Set loading to false after fetching data\r\n        } catch (error) {\r\n          console.error('Error fetching employee badges:', error);\r\n          setLoading(false); // Ensure loading is set to false even if there is an error\r\n        }\r\n      };\r\n    \r\n      // Call fetchBadges for all users\r\n      fetchBadges();\r\n    \r\n      // Call fetchEmployeeBadges if the user is a manager\r\n      if (user.user_role === 'management') {\r\n        fetchEmployeeBadges();\r\n      } else {\r\n        // If not a manager, ensure loading is set to false\r\n        // This is necessary if no other data fetching is performed for non-managers\r\n        setLoading(false);\r\n      }\r\n\r\n\r\n\r\n\r\n    }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n  const enrollInTraining = async (moduleId) => {\r\n    const response = await fetch('http://localhost:4000/enroll-training', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ userId: user.user_id, moduleId: moduleId })\r\n    });\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      alert('Enrolled successfully!');\r\n      fetchAllTrainings(); // This function is now accessible here\r\n      fetchTrainingModules();\r\n    } else {\r\n      alert('Failed to enroll.');\r\n    }\r\n  };\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n  \r\n\r\n            {user.user_role === 'management' && (\r\n                    <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n                    <h3 style={{ color: '#17a2b8' }}>Employees in Your Organization:</h3>\r\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                        {employees.map(employee => (\r\n                        <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                            <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                            <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                            <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                            <div style={{ marginTop: '10px' }}>\r\n                            {employee.badges.map(badge => (\r\n                                <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                                {badge.badge_name}\r\n                                </span>\r\n                            ))}\r\n                            </div>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                )}\r\n\r\n  \r\n      \r\n        <>\r\n          <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px' }}>\r\n            <h2>Training Assignments for My Employees</h2>\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n              {trainingAssignments.map((assignment) => (\r\n                <li key={`${assignment.user_id}-${assignment.module_name}`} style={{ padding: '10px 0' }}>\r\n                  {`${assignment.first_name} ${assignment.last_name}`} - {assignment.module_name} ({assignment.status})\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n              <select value={selectedEmployee} onChange={e => setSelectedEmployee(e.target.value)} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n                <option value=\"\">Select Employee</option>\r\n                {employees.map(employee => (\r\n                  <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n                ))}\r\n              </select>\r\n              <select value={selectedModule} onChange={e => setSelectedModule(e.target.value)} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n                <option value=\"\">Select Training Module</option>\r\n                {allTrainings.map(module => (\r\n                  <option key={module.module_id} value={module.module_id}>{module.module_name}</option>\r\n                ))}\r\n              </select>\r\n              <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n                Enroll Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default TrainingModulesPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}