{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\TrainingModule.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrainingModulesPage() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [trainings, setTrainings] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(''); // To track selected employee\n  const [selectedTraining, setSelectedTraining] = useState(''); // To track selected training\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    fetchTrainingModules();\n    fetchEmployeesAndTrainings();\n    fetchEmployees(); // Add this line\n  }, [user.user_id, user.organization_id]); // Fetch training modules when the component mounts or user_id changes\n\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  const completeTraining = async moduleId => {\n    try {\n      const response = await fetch('http://localhost:4000/complete-training', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          moduleId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Training completed successfully!');\n        fetchTrainingModules(); // Refresh the modules to reflect the completion\n      } else {\n        alert('Failed to complete training.');\n      }\n    } catch (error) {\n      console.error('Error completing training:', error);\n      alert('Error completing training');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assigned Training Modules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: assignedModules.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: module.module_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: module.module_link,\n          width: \"560\",\n          height: \"315\",\n          title: module.module_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeTraining(module.module_id),\n          className: \"btn\",\n          style: {\n            backgroundColor: 'green',\n            color: 'white',\n            borderRadius: '5px',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            border: 'none',\n            marginTop: '10px'\n          },\n          children: \"I attest to completing this training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, module.module_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completed Training Modules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: completedModules.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: module.module_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: module.module_link,\n          width: \"560\",\n          height: \"315\",\n          title: module.module_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, module.module_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assign Training Modules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedEmployee(e.target.value),\n        value: selectedEmployee,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: employee.user_id,\n          children: employee.name\n        }, employee.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this) // Assuming your employee object has these fields\n        )]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedTraining(e.target.value),\n        value: selectedTraining,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), trainings.map(training => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: training.module_id,\n          children: training.module_name\n        }, training.module_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) // Assuming your training object has these fields\n        )]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: assignTraining,\n        children: \"Assign Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TrainingModulesPage, \"9geebLv7UsEpK/OM+Fbi5v7GgQE=\");\n_c = TrainingModulesPage;\nexport default TrainingModulesPage;\nvar _c;\n$RefreshReg$(_c, \"TrainingModulesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrainingModulesPage","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","employees","setEmployees","trainings","setTrainings","selectedEmployee","setSelectedEmployee","selectedTraining","setSelectedTraining","user","JSON","parse","localStorage","getItem","fetchTrainingModules","fetchEmployeesAndTrainings","fetchEmployees","user_id","organization_id","response","fetch","data","json","completeTraining","moduleId","method","headers","body","stringify","userId","success","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","module","module_name","src","module_link","width","height","title","onClick","module_id","className","style","backgroundColor","color","borderRadius","padding","cursor","border","marginTop","user_role","onChange","e","target","value","employee","name","training","assignTraining","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/TrainingModule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TrainingModulesPage() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [trainings, setTrainings] = useState([]); \r\n\r\n  const [selectedEmployee, setSelectedEmployee] = useState(''); // To track selected employee\r\n  const [selectedTraining, setSelectedTraining] = useState(''); // To track selected training\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    fetchTrainingModules();\r\n    fetchEmployeesAndTrainings();\r\n    fetchEmployees(); // Add this line\r\n  }, [user.user_id, user.organization_id]); // Fetch training modules when the component mounts or user_id changes\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n\r\n\r\n  const completeTraining = async (moduleId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/complete-training', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, moduleId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Training completed successfully!');\r\n        fetchTrainingModules(); // Refresh the modules to reflect the completion\r\n      } else {\r\n        alert('Failed to complete training.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing training:', error);\r\n      alert('Error completing training');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Assigned Training Modules</h2>\r\n      <div>\r\n        {assignedModules.map(module => (\r\n          <div key={module.module_id}>\r\n            <h3>{module.module_name}</h3>\r\n            <iframe src={module.module_link} width=\"560\" height=\"315\" title={module.module_name}></iframe>\r\n            <button\r\n              onClick={() => completeTraining(module.module_id)}\r\n              className=\"btn\"\r\n              style={{ backgroundColor: 'green', color: 'white', borderRadius: '5px', padding: '10px 20px', cursor: 'pointer', border: 'none', marginTop: '10px' }}>\r\n              I attest to completing this training\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h2>Completed Training Modules</h2>\r\n      <div>\r\n        {completedModules.map(module => (\r\n          <div key={module.module_id}>\r\n            <h3>{module.module_name}</h3>\r\n            <iframe src={module.module_link} width=\"560\" height=\"315\" title={module.module_name}></iframe>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {user.user_role === 'management' && (\r\n        <div>\r\n          <h2>Assign Training Modules</h2>\r\n          <select onChange={(e) => setSelectedEmployee(e.target.value)} value={selectedEmployee}>\r\n            <option value=\"\">Select Employee</option>\r\n            {employees.map((employee) => (\r\n              <option key={employee.user_id} value={employee.user_id}>{employee.name}</option> // Assuming your employee object has these fields\r\n            ))}\r\n          </select>\r\n          <select onChange={(e) => setSelectedTraining(e.target.value)} value={selectedTraining}>\r\n            <option value=\"\">Select Training</option>\r\n            {trainings.map((training) => (\r\n              <option key={training.module_id} value={training.module_id}>{training.module_name}</option> // Assuming your training object has these fields\r\n            ))}\r\n          </select>\r\n          <button onClick={assignTraining}>Assign Training</button>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainingModulesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}