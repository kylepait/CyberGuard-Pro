{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macka\\\\Documents\\\\GitHub\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\ModuleQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport questions from './questions.json';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModuleQuiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const openQuiz = JSON.parse(localStorage.getItem('openQuiz'));\n  const awardPerfectScoreBadge = async () => {\n    const badgeId = '10';\n    try {\n      const response = await fetch('http://localhost:4000/add-badge', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.user_id,\n          badgeId\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        console.error('Failed to award perfect score badge.');\n      }\n    } catch (error) {\n      console.error('Error awarding perfect score badge:', error);\n    }\n  };\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setQuestionsAnswered(questionsAnswered + 1);\n    var nextQuestion = currentQuestionIndex + 1;\n    while (nextQuestion < questions.length && questions[nextQuestion].batch != openQuiz) {\n      nextQuestion++;\n    }\n    if (nextQuestion < questions.length) {\n      setCurrentQuestionIndex(nextQuestion);\n    } else {\n      setShowScore(true);\n      if (score + 1 === questions.length) {//Plus one because we haven't updated the state yet\n        //awardPerfectScoreBadge();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", questions.length, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/TrainingModule\",\n        style: {\n          margin: '10px 10px 10px 0',\n          display: 'inline-block',\n          textDecoration: 'none',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          borderRadius: '5px'\n        },\n        children: \"Training Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [\"//\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(option === questions[currentQuestionIndex].answer),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ModuleQuiz, \"bI67hsm/KwSXrlLKp5EC4RmfEyA=\");\n_c = ModuleQuiz;\nexport default ModuleQuiz;\nvar _c;\n$RefreshReg$(_c, \"ModuleQuiz\");","map":{"version":3,"names":["React","useState","useEffect","questions","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ModuleQuiz","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","questionsAnswered","setQuestionsAnswered","showScore","setShowScore","user","JSON","parse","localStorage","getItem","openQuiz","awardPerfectScoreBadge","badgeId","response","fetch","method","headers","body","stringify","userId","user_id","data","json","success","console","error","handleAnswerOptionClick","isCorrect","nextQuestion","length","batch","className","children","onClick","window","location","reload","fileName","_jsxFileName","lineNumber","columnNumber","to","style","margin","display","textDecoration","padding","backgroundColor","color","borderRadius","question","options","map","option","index","answer","_c","$RefreshReg$"],"sources":["C:/Users/macka/Documents/GitHub/CyberGuard-Pro/frontend/src/components/ModuleQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport questions from './questions.json';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\n\r\nconst ModuleQuiz = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const openQuiz = JSON.parse(localStorage.getItem('openQuiz'));\r\n\r\n  const awardPerfectScoreBadge = async () => {\r\n    const badgeId = '10'; \r\n    try {\r\n      const response = await fetch('http://localhost:4000/add-badge', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId: user.user_id, badgeId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!data.success) {\r\n        console.error('Failed to award perfect score badge.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error awarding perfect score badge:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleAnswerOptionClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score+1);\r\n    }\r\n    setQuestionsAnswered(questionsAnswered+1);\r\n\r\n    var nextQuestion = currentQuestionIndex + 1;\r\n    while (nextQuestion < questions.length && questions[nextQuestion].batch != openQuiz)\r\n    {\r\n      nextQuestion++;\r\n    }\r\n    if (nextQuestion < questions.length) {\r\n       \r\n        setCurrentQuestionIndex(nextQuestion);\r\n      \r\n    } else {\r\n      setShowScore(true);\r\n      if (score + 1 === questions.length) { //Plus one because we haven't updated the state yet\r\n        //awardPerfectScoreBadge();\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className='app'>\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {questions.length}\r\n          <button onClick={() => window.location.reload()}>Play Again</button>\r\n          <Link to='/TrainingModule' style={{ margin: '10px 10px 10px 0', display: 'inline-block', textDecoration: 'none', padding: '10px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px' }}>\r\n          Training Page\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              //<span>Question {currentQuestionIndex + 1}</span>/{questions.length}\r\n\r\n            </div>\r\n            <div className='question-text'>{questions[currentQuestionIndex].question}</div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n              <button key={index} onClick={() => handleAnswerOptionClick(option === questions[currentQuestionIndex].answer)}>\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModuleQuiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}