{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\user-home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\n\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n        const data = await response.json();\n        setBadges(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching badges:', error);\n        setLoading(false);\n      }\n    };\n    fetchBadges();\n  }, [user.id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading badges...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.user_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", user.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", user.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Organization ID: \", user.organization_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", user.user_role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Badges:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: badges.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: badges.map(badge => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Badge ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), badge.badge_id, \" - \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Badge Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 49\n          }, this), badge.badge_name]\n        }, badge.badge_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No badges found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"QDOubHRomXiqFNd+fNP95Ut07T0=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserHome","_s","user","JSON","parse","localStorage","getItem","badges","setBadges","loading","setLoading","fetchBadges","response","fetch","user_id","data","json","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","first_name","last_name","organization_id","user_role","length","map","badge","badge_id","badge_name","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/user-home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserHome() {\r\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\r\n\r\n  const [badges, setBadges] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n        const data = await response.json();\r\n        setBadges(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching badges:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBadges();\r\n  }, [user.id]);\r\n\r\n  if (loading) {\r\n    return <p>Loading badges...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome, {user.username}!</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>User ID: {user.user_id}</p>\r\n      <p>First Name: {user.first_name}</p>\r\n      <p>Last Name: {user.last_name}</p>\r\n      <p>Organization ID: {user.organization_id}</p>\r\n      <p>User Role: {user.user_role}</p>\r\n\r\n      <h3>Badges:</h3>\r\n      <ul>\r\n      {badges.length > 0 ? (\r\n        <ul>\r\n          {badges.map(badge => (\r\n            <li key={badge.badge_id}>\r\n              <p>Badge ID</p>{badge.badge_id} - <p>Badge Name</p>{badge.badge_name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No badges found.</p>\r\n      )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}