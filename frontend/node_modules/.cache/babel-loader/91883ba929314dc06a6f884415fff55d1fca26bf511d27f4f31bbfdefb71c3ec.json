{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyChartComponent from './trainingModulesBarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerMetricsDashboard() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rarestBadge, setRarestBadge] = useState({\n    badge_name: '',\n    count: 0\n  });\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\n  const [goalDueDate, setGoalDueDate] = useState('');\n  const [goalIncentive, setGoalIncentive] = useState('');\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\n  const refreshAllData = async () => {\n    await fetchTrainingAssignments();\n    await fetchEmployeeBadges();\n    await fetchAllTrainings();\n    await fetchTrainingAssignments();\n    await fetchBadges();\n    await fetchEnrollEmployees();\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\n    // Include any other fetch calls needed to refresh your UI accordingly\n  };\n  const [chartData, setChartData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Number of assigned trainings per employee\n    completedCount: [] // Number of completed trainings per employee\n  });\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEnrollEmployee,\n        moduleId: selectedEnrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  const unenrollEmployeeFromTraining = async () => {\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedUnenrollEmployee,\n        moduleId: selectedUnenrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee unenrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to unenroll employee.');\n    }\n  };\n  const fetchBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n      const data = await response.json();\n      setBadges(data);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n    }\n  };\n  const fetchEmployeeBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data);\n\n        // Initialize a map to count occurrences of each badge\n        let badgeCounts = new Map();\n\n        // Iterate over each employee and their badges\n        data.forEach(employee => {\n          employee.badges.forEach(badge => {\n            let count = badgeCounts.get(badge.badge_id) || {\n              count: 0,\n              name: badge.badge_name\n            };\n            badgeCounts.set(badge.badge_id, {\n              count: count.count + 1,\n              name: badge.badge_name\n            });\n          });\n        });\n\n        // Find the rarest badge by looking for the minimum count\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, {\n          count: Infinity,\n          name: ''\n        });\n        setRarestBadge({\n          badge_name: rarestBadge.name,\n          count: rarestBadge.count\n        });\n      } else {\n        console.error('Failed to fetch employee badges');\n      }\n    } catch (error) {\n      console.error('Error fetching employee badges:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchDataIfNeeded = async () => {\n      await refreshAllData();\n    };\n    fetchDataIfNeeded();\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\n  }, [user.user_id, user.user_role, user.organization_id]);\n  useEffect(() => {\n    const tempChartData = {\n      labels: [],\n      assignedCount: [],\n      completedCount: []\n    };\n    const assignmentsByEmployee = {}; // Structure to hold the count\n    trainingAssignments.forEach(assignment => {\n      if (!assignmentsByEmployee[assignment.user_id]) {\n        assignmentsByEmployee[assignment.user_id] = {\n          assigned: 0,\n          completed: 0\n        };\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\n      }\n      if (assignment.status === 'completed') {\n        assignmentsByEmployee[assignment.user_id].completed++;\n      } else {\n        assignmentsByEmployee[assignment.user_id].assigned++;\n      }\n    });\n\n    // Convert aggregated data into arrays for the chart\n    Object.values(assignmentsByEmployee).forEach(value => {\n      tempChartData.assignedCount.push(value.assigned);\n      tempChartData.completedCount.push(value.completed);\n    });\n    setChartData(tempChartData);\n    // This effect should only run when trainingAssignments change.\n\n    const moduleCompletionCounts = {}; // {moduleId: count}\n\n    trainingAssignments.forEach(assignment => {\n      if (assignment.status === 'completed') {\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\n      }\n    });\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\n      return !acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc] ? moduleId : acc;\n    }, null);\n\n    // Assuming you have a way to fetch or determine the security suggestion for a module\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\n    setSecuritySuggestion(securitySuggestion);\n  }, [trainingAssignments]);\n  useEffect(() => {\n    // Assume `employees` is already populated with badge counts\n    const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\n    const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\n    setTopBadgeEarners(earners);\n  }, [employees]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  const fetchEnrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownEnrollEmployee(data);\n  };\n  const handleEnrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedEnrollEmployee(selectedValue);\n      setDropdownEnrollModule(data);\n    } catch (error) {\n      console.error('Error fetching enroll module data:', error);\n    }\n  };\n  const handleEnrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedEnrollModule(selectedValue);\n  };\n  const fetchUnenrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownUnenrollEmployee(data);\n  };\n  const handleUnenrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedUnenrollEmployee(selectedValue);\n      setDropdownUnenrollModule(data);\n    } catch (error) {\n      console.error('Error fetching unenroll module data:', error);\n    }\n  };\n  const handleUnenrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedUnenrollModule(selectedValue);\n  };\n  const handleSetGoal = async event => {\n    event.preventDefault();\n\n    // Assuming you have the organization ID stored in the state or derived from the user's session\n    const organizationId = user.organization_id;\n    const goalData = {\n      organizationId,\n      dueDate: goalDueDate,\n      incentive: goalIncentive\n    };\n    try {\n      // Replace the URL with your actual endpoint\n      const response = await fetch('http://localhost:4000/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(goalData)\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        alert('Goal set successfully');\n        // Optionally, clear the form fields or update the UI\n      } else {\n        alert('Failed to set goal');\n      }\n    } catch (error) {\n      console.error('Error setting goal:', error);\n      alert('Error setting goal');\n    }\n  };\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\n  function getSecuritySuggestionForModule(moduleId) {\n    // Example: Predefined suggestions\n    const suggestions = {\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\n      '4': 'General Cybersecurity could be lacking',\n      '5': 'Phishing attempts need to be educated against',\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\n      '7': 'Strong passwords for important website is crucial'\n\n      // Add more module IDs and suggestions as needed\n    };\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        borderBottom: '25px solid #17a2b8',\n        paddingBottom: '10px'\n      },\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Suggestion Based on Training Completion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: securitySuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Badges: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: Array.isArray(employee.badges) ? employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 21\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyChartComponent, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => setIsAssignmentsVisible(!isAssignmentsVisible),\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), isAssignmentsVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: trainingAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: `${assignment.first_name} ${assignment.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: assignment.module_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: '5px 10px',\n                borderRadius: '5px',\n                color: '#ffffff',\n                backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545'\n              },\n              children: assignment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 27\n            }, this)]\n          }, `${assignment.user_id}-${assignment.module_name}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '20px',\n          backgroundColor: '#fff',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '10px',\n              color: '#007bff'\n            },\n            children: \"Rarest Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 11\n          }, this), rarestBadge.count > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: [\"The rarest badge is \\\"\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.badge_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 36\n            }, this), \"\\\" with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 84\n            }, this), \" occurrences.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: \"Badge information is currently unavailable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"50\",\n            height: \"50\",\n            fill: \"currentColor\",\n            className: \"bi bi-award\",\n            viewBox: \"0 0 16 16\",\n            style: {\n              minWidth: '50px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M9.669.864 8 0 6.331.864 7.5 2.5 7.5 6l-.5 8.5L8 16l1-.5-.5-8.5 7.5-6.5-6.331-3.636zM8 15l-.5-8.5H8.5L8 15zm0-9.5L4.8 3 8 .7 11.2 3 8 5.5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4.8 3 3.995 5.5H.934L3.3 7l-.593 2L5.5 7.5v-4L4.8 3zm6.4 0 .805 2.5h3.061l-2.366 1.5.593 2-2.788-1.5v-4l.795-2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Badge Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n            gap: '15px'\n          },\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              borderRadius: '5px',\n              padding: '10px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0 0 10px 0'\n              },\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"User ID: \", employee.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: employee.badges && employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    background: '#e9ecef',\n                    borderRadius: '5px',\n                    padding: '5px 10px',\n                    marginRight: '5px',\n                    marginBottom: '5px',\n                    fontSize: '14px'\n                  },\n                  children: badge.badge_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#6c757d'\n                  },\n                  children: [\"Earned on: \", new Date(badge.earned_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 29\n                }, this)]\n              }, badge.badge_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Leaderboard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: employees.sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0)).map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'bold',\n                  margin: '0'\n                },\n                children: [employee.first_name, \" \", employee.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0'\n                },\n                children: [\"Score: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enroll Employees in Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollEmployee,\n            onChange: handleEnrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollModule,\n            onChange: handleEnrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), dropdownEnrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unenroll Employees from Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollEmployee,\n            onChange: handleUnenrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollModule,\n            onChange: handleUnenrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 13\n            }, this), dropdownUnenrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unenrollEmployeeFromTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Unenroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            gap: '20px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Set a Goal for Your Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSetGoal,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalDueDate\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Goal Due Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"goalDueDate\",\n                  value: goalDueDate,\n                  onChange: e => setGoalDueDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalIncentive\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Incentive:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"goalIncentive\",\n                  value: goalIncentive,\n                  onChange: e => setGoalIncentive(e.target.value),\n                  placeholder: \"Enter incentive\",\n                  style: {\n                    width: '100%',\n                    height: '100px',\n                    resize: 'vertical',\n                    padding: '10px',\n                    borderRadius: '5px',\n                    border: '1px solid #ccc'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '12px',\n                    marginTop: '5px'\n                  },\n                  children: \"Maximum of 255 characters.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                style: {\n                  padding: '10px 20px',\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  borderRadius: '5px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'opacity 0.3s'\n                },\n                children: \"Set Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Current Incentive Winner(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: 'none',\n                paddingLeft: '0'\n              },\n              children: topBadgeEarners.map(earner => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [earner.first_name, \" \", earner.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this), \" - \", earner.badges.length, \" Badges\"]\n              }, earner.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerMetricsDashboard, \"6dsd4cvJ6bVu+3/xF7c/gNUf0FU=\");\n_c = ManagerMetricsDashboard;\nexport default ManagerMetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerMetricsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerMetricsDashboard","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","securitySuggestion","setSecuritySuggestion","goalDueDate","setGoalDueDate","goalIncentive","setGoalIncentive","topBadgeEarners","setTopBadgeEarners","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchEnrollEmployees","fetchUnenrollEmployees","chartData","setChartData","labels","assignedCount","completedCount","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","get","badge_id","name","set","Array","from","values","reduce","acc","val","Infinity","fetchDataIfNeeded","user_role","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","moduleCompletionCounts","module_id","leastCompletedModuleId","keys","getSecuritySuggestionForModule","maxBadgeCount","Math","max","map","emp","length","earners","filter","fetchTrainingModules","handleEnrollEmployeeChange","event","selectedValue","target","handleEnrollModuleChange","handleUnenrollEmployeeChange","handleUnenrollModuleChange","handleSetGoal","preventDefault","organizationId","goalData","dueDate","incentive","responseData","isAssignmentsVisible","setIsAssignmentsVisible","suggestions","style","padding","children","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","backgroundColor","borderRadius","color","boxShadow","display","gridTemplateColumns","gap","background","margin","email","isArray","marginRight","marginBottom","fontSize","onClick","cursor","listStyleType","paddingLeft","justifyContent","alignItems","fontWeight","module_name","xmlns","width","height","fill","className","viewBox","minWidth","d","flexDirection","Date","earned_date","toLocaleDateString","sort","a","b","index","marginLeft","maxWidth","onChange","border","option","flex","onSubmit","htmlFor","type","id","e","placeholder","resize","transition","earner","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\r\n\r\n  const [goalDueDate, setGoalDueDate] = useState('');\r\n  const [goalIncentive, setGoalIncentive] = useState('');\r\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n  };\r\n\r\n    const [chartData, setChartData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Number of assigned trainings per employee\r\n      completedCount: [], // Number of completed trainings per employee\r\n    });\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            let count = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name };\r\n            badgeCounts.set(badge.badge_id, { count: count.count + 1, name: badge.badge_name });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchDataIfNeeded = async () => {\r\n      \r\n      await refreshAllData();\r\n    };\r\n  \r\n    fetchDataIfNeeded();\r\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\r\n  }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const tempChartData = {\r\n      labels: [],\r\n      assignedCount: [],\r\n      completedCount: [],\r\n    };\r\n  \r\n    const assignmentsByEmployee = {}; // Structure to hold the count\r\n    trainingAssignments.forEach(assignment => {\r\n      if (!assignmentsByEmployee[assignment.user_id]) {\r\n        assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n      }\r\n      if (assignment.status === 'completed') {\r\n        assignmentsByEmployee[assignment.user_id].completed++;\r\n      } else {\r\n        assignmentsByEmployee[assignment.user_id].assigned++;\r\n      }\r\n    });\r\n  \r\n    // Convert aggregated data into arrays for the chart\r\n    Object.values(assignmentsByEmployee).forEach(value => {\r\n      tempChartData.assignedCount.push(value.assigned);\r\n      tempChartData.completedCount.push(value.completed);\r\n    });\r\n  \r\n    setChartData(tempChartData);\r\n    // This effect should only run when trainingAssignments change.\r\n\r\n    const moduleCompletionCounts = {}; // {moduleId: count}\r\n\r\n    trainingAssignments.forEach(assignment => {\r\n      if (assignment.status === 'completed') {\r\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\r\n      }\r\n    });\r\n  \r\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\r\n      return (!acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc]) ? moduleId : acc;\r\n    }, null);\r\n  \r\n    // Assuming you have a way to fetch or determine the security suggestion for a module\r\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\r\n  \r\n    setSecuritySuggestion(securitySuggestion);\r\n\r\n\r\n  }, [trainingAssignments]);\r\n\r\n  useEffect(() => {\r\n      // Assume `employees` is already populated with badge counts\r\n      const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\r\n      const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\r\n      setTopBadgeEarners(earners);\r\n  }, [employees]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n\r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n  const handleSetGoal = async (event) => {\r\n      event.preventDefault();\r\n\r\n      // Assuming you have the organization ID stored in the state or derived from the user's session\r\n      const organizationId = user.organization_id;\r\n\r\n      const goalData = {\r\n          organizationId,\r\n          dueDate: goalDueDate,\r\n          incentive: goalIncentive\r\n      };\r\n\r\n      try {\r\n          // Replace the URL with your actual endpoint\r\n          const response = await fetch('http://localhost:4000/api/goals', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(goalData),\r\n          });\r\n\r\n          const responseData = await response.json();\r\n\r\n          if (response.ok) {\r\n              alert('Goal set successfully');\r\n              // Optionally, clear the form fields or update the UI\r\n          } else {\r\n              alert('Failed to set goal');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error setting goal:', error);\r\n          alert('Error setting goal');\r\n      }\r\n  };\r\n\r\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\r\n\r\n\r\n  function getSecuritySuggestionForModule(moduleId) {\r\n    // Example: Predefined suggestions\r\n    const suggestions = {\r\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\r\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\r\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\r\n      '4': 'General Cybersecurity could be lacking',\r\n      '5': 'Phishing attempts need to be educated against',\r\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\r\n      '7': 'Strong passwords for important website is crucial'\r\n\r\n\r\n\r\n\r\n\r\n      // Add more module IDs and suggestions as needed\r\n    };\r\n  \r\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\r\n  }\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n  \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Suggestion Based on Training Completion:</h3>\r\n          <p>{securitySuggestion}</p>\r\n        </div>\r\n\r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h2 onClick={() => setIsAssignmentsVisible(!isAssignmentsVisible)} style={{ cursor: 'pointer' }}>\r\n              Training Assignments for My Employees\r\n          </h2>\r\n          {isAssignmentsVisible && (\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n                  {trainingAssignments.map((assignment) => (\r\n                      <li key={`${assignment.user_id}-${assignment.module_name}`} style={{ \r\n                          padding: '10px', \r\n                          marginBottom: '10px',\r\n                          backgroundColor: '#ffffff',\r\n                          borderRadius: '5px',\r\n                          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                          alignItems: 'center',\r\n                      }}>\r\n                          <span style={{ fontWeight: 'bold' }}>{`${assignment.first_name} ${assignment.last_name}`}</span>  \r\n                          <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                          <span style={{ \r\n                              padding: '5px 10px', \r\n                              borderRadius: '5px', \r\n                              color: '#ffffff', \r\n                              backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\r\n                          }}>\r\n                          {assignment.status}\r\n                          </span>\r\n                      </li>\r\n                  ))}\r\n              </ul>\r\n          )}\r\n      </div>\r\n\r\n\r\n      <div style={{\r\n        marginTop: '20px',\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n      }}>\r\n        <div>\r\n          <h3 style={{ marginBottom: '10px', color: '#007bff' }}>Rarest Badge</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p style={{ margin: 0 }}>\r\n              The rarest badge is \"<strong>{rarestBadge.badge_name}</strong>\" with <strong>{rarestBadge.count}</strong> occurrences.\r\n            </p>\r\n          ) : (\r\n            <p style={{ margin: 0 }}>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {/* Placeholder for badge icon - consider replacing with an actual badge image if available */}\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-award\" viewBox=\"0 0 16 16\" style={{ minWidth: '50px' }}>\r\n            <path d=\"M9.669.864 8 0 6.331.864 7.5 2.5 7.5 6l-.5 8.5L8 16l1-.5-.5-8.5 7.5-6.5-6.331-3.636zM8 15l-.5-8.5H8.5L8 15zm0-9.5L4.8 3 8 .7 11.2 3 8 5.5z\"/>\r\n            <path d=\"M4.8 3 3.995 5.5H.934L3.3 7l-.593 2L5.5 7.5v-4L4.8 3zm6.4 0 .805 2.5h3.061l-2.366 1.5.593 2-2.788-1.5v-4l.795-2z\"/>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n\r\n\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', gap: '20px', marginTop: '20px' }}>\r\n            {/* Set a Goal for Your Employees */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Set a Goal for Your Employees</h3>\r\n              <form onSubmit={handleSetGoal}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalDueDate\" style={{ marginRight: '10px' }}>Goal Due Date:</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    id=\"goalDueDate\" \r\n                    value={goalDueDate} \r\n                    onChange={e => setGoalDueDate(e.target.value)} \r\n                  />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalIncentive\" style={{ marginRight: '10px' }}>Incentive:</label>\r\n                  <textarea\r\n                    id=\"goalIncentive\"\r\n                    value={goalIncentive}\r\n                    onChange={e => setGoalIncentive(e.target.value)}\r\n                    placeholder=\"Enter incentive\"\r\n                    style={{ width: '100%', height: '100px', resize: 'vertical', padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n                  />\r\n                  <div style={{ fontSize: '12px', marginTop: '5px' }}>Maximum of 255 characters.</div>\r\n                </div>\r\n                <button type=\"submit\" style={{\r\n                  padding: '10px 20px',\r\n                  backgroundColor: '#007bff',\r\n                  color: 'white',\r\n                  borderRadius: '5px',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  transition: 'opacity 0.3s'\r\n                }}>\r\n                  Set Goal\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            {/* Current Incentive Winner(s) */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Current Incentive Winner(s)</h3>\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                {topBadgeEarners.map(earner => (\r\n                  <li key={earner.user_id} style={{ marginBottom: '10px' }}>\r\n                    <strong>{earner.first_name} {earner.last_name}</strong> - {earner.badges.length} Badges\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}