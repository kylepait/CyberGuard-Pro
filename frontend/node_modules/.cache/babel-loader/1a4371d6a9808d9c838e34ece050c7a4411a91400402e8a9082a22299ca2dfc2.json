{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\user-home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\n\n  const [badges, setBadges] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Existing code to fetch badges remains unchanged\n    const fetchBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n        const data = await response.json();\n        setBadges(data);\n      } catch (error) {\n        console.error('Error fetching badges:', error);\n      }\n    };\n\n    // New function to fetch badges of employees within the manager's organization\n    const fetchEmployeeBadges = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n        const data = await response.json();\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error('Error fetching employee badges:', error);\n        setLoading(false); // Ensure loading is set to false even if there is an error\n      }\n    };\n\n    // Call fetchBadges for all users\n    fetchBadges();\n\n    // Call fetchEmployeeBadges if the user is a manager\n    if (user.user_role === 'management') {\n      fetchEmployeeBadges();\n    } else {\n      // If not a manager, ensure loading is set to false\n      // This is necessary if no other data fetching is performed for non-managers\n      setLoading(false);\n    }\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading badges...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/TrainingModule\",\n      className: \"btn btn-default border w-15 bg-light rounded 0 text-decoration-none\",\n      children: \"Training Module Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.user_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", user.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", user.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Organization ID: \", user.organization_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Role: \", user.user_role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Badges:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: badges.map(badge => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}${badge.image_path}`,\n          alt: badge.badge_name,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, badge.badge_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), user.user_role === 'management' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-info p-3 rounded w-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First Name: \", employee.first_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Name: \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: employee.badges.map(badge =>\n            /*#__PURE__*/\n            // Assuming each employee object has a badges array\n            _jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + badge.image_path,\n                alt: badge.badge_name,\n                style: {\n                  width: '100px',\n                  height: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this), badge.badge_id, \" - \", badge.badge_name]\n            }, badge.badge_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"/w3Eu70YhaitA7/vvDbWaUdRt/8=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","UserHome","_s","user","JSON","parse","localStorage","getItem","badges","setBadges","employees","setEmployees","loading","setLoading","fetchBadges","response","fetch","user_id","data","json","error","console","fetchEmployeeBadges","organization_id","user_role","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","username","email","first_name","last_name","map","badge","src","process","env","PUBLIC_URL","image_path","alt","badge_name","style","width","height","badge_id","employee","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/user-home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate  } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction UserHome() {\r\n  const user = JSON.parse(localStorage.getItem('user')); // Retrieve the user object from local storage\r\n\r\n  const [badges, setBadges] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Existing code to fetch badges remains unchanged\r\n    const fetchBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n        const data = await response.json();\r\n        setBadges(data);\r\n      } catch (error) {\r\n        console.error('Error fetching badges:', error);\r\n      }\r\n    };\r\n  \r\n    // New function to fetch badges of employees within the manager's organization\r\n    const fetchEmployeeBadges = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n        const data = await response.json();\r\n        setEmployees(data); // Assuming the endpoint returns structured data as discussed\r\n        setLoading(false); // Set loading to false after fetching data\r\n      } catch (error) {\r\n        console.error('Error fetching employee badges:', error);\r\n        setLoading(false); // Ensure loading is set to false even if there is an error\r\n      }\r\n    };\r\n  \r\n    // Call fetchBadges for all users\r\n    fetchBadges();\r\n  \r\n    // Call fetchEmployeeBadges if the user is a manager\r\n    if (user.user_role === 'management') {\r\n      fetchEmployeeBadges();\r\n    } else {\r\n      // If not a manager, ensure loading is set to false\r\n      // This is necessary if no other data fetching is performed for non-managers\r\n      setLoading(false);\r\n    }\r\n  }, [user.user_id, user.user_role, user.organization_id]); // Added dependencies for useEffect\r\n  \r\n\r\n\r\n  if (loading) {\r\n    return <p>Loading badges...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Link to='/TrainingModule' className='btn btn-default border w-15 bg-light rounded 0 text-decoration-none'>Training Module Page</Link>\r\n\r\n\r\n      <h2>Welcome, {user.username}!</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>User ID: {user.user_id}</p>\r\n      <p>First Name: {user.first_name}</p>\r\n      <p>Last Name: {user.last_name}</p>\r\n      <p>Organization ID: {user.organization_id}</p>\r\n      <p>User Role: {user.user_role}</p>\r\n\r\n      <h3>Your Badges:</h3>\r\n      <ul>\r\n        {badges.map(badge => (\r\n          <li key={badge.badge_id}>\r\n            <img src={`${process.env.PUBLIC_URL}${badge.image_path}`} alt={badge.badge_name} style={{ width: '100px', height: '100px' }} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {user.user_role === 'management' && (\r\n        <div className='bg-info p-3 rounded w-25'>\r\n          <h3>Employees in Your Organization:</h3>\r\n          <ul>\r\n            {employees.map(employee => (\r\n              <li key={employee.user_id}>\r\n                <p>First Name: {employee.first_name}</p>\r\n                <p>Last Name: {employee.last_name}</p>\r\n                <p>Email: {employee.email}</p>\r\n                <p>User ID: {employee.user_id}</p>\r\n                <ul>\r\n                  {employee.badges.map(badge => ( // Assuming each employee object has a badges array\r\n                    <li key={badge.badge_id}>\r\n                      <img src={process.env.PUBLIC_URL + badge.image_path} alt={badge.badge_name} style={{ width: '100px', height: '100px' }} />\r\n                      {badge.badge_id} - {badge.badge_name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}