{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\CyberGuard Pro\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyChartComponent from './trainingModulesBarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerMetricsDashboard() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rarestBadge, setRarestBadge] = useState({\n    badge_name: '',\n    count: 0\n  });\n  const refreshAllData = async () => {\n    await fetchTrainingAssignments();\n    await fetchEmployeeBadges();\n    await fetchAllTrainings();\n    await fetchTrainingAssignments();\n    await fetchBadges();\n    await fetchEnrollEmployees();\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\n    // Include any other fetch calls needed to refresh your UI accordingly\n  };\n  const [chartData, setChartData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Number of assigned trainings per employee\n    completedCount: [] // Number of completed trainings per employee\n  });\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEnrollEmployee,\n        moduleId: selectedEnrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  const unenrollEmployeeFromTraining = async () => {\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedUnenrollEmployee,\n        moduleId: selectedUnenrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee unenrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to unenroll employee.');\n    }\n  };\n  const fetchBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n      const data = await response.json();\n      setBadges(data);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n    }\n  };\n  const fetchEmployeeBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data);\n\n        // Initialize a map to count occurrences of each badge\n        let badgeCounts = new Map();\n\n        // Iterate over each employee and their badges\n        data.forEach(employee => {\n          employee.badges.forEach(badge => {\n            let count = badgeCounts.get(badge.badge_id) || {\n              count: 0,\n              name: badge.badge_name\n            };\n            badgeCounts.set(badge.badge_id, {\n              count: count.count + 1,\n              name: badge.badge_name\n            });\n          });\n        });\n\n        // Find the rarest badge by looking for the minimum count\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, {\n          count: Infinity,\n          name: ''\n        });\n        setRarestBadge({\n          badge_name: rarestBadge.name,\n          count: rarestBadge.count\n        });\n      } else {\n        console.error('Failed to fetch employee badges');\n      }\n    } catch (error) {\n      console.error('Error fetching employee badges:', error);\n    }\n  };\n  useEffect(() => {\n    const tempChartData = {\n      labels: [],\n      assignedCount: [],\n      completedCount: []\n    };\n    const assignmentsByEmployee = {}; // {employeeId: {assigned: 0, completed: 0}}\n    trainingAssignments.forEach(assignment => {\n      if (!assignmentsByEmployee[assignment.user_id]) {\n        assignmentsByEmployee[assignment.user_id] = {\n          assigned: 0,\n          completed: 0\n        };\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\n      }\n      if (assignment.status === 'completed') {\n        assignmentsByEmployee[assignment.user_id].completed++;\n      } else {\n        assignmentsByEmployee[assignment.user_id].assigned++;\n      }\n    });\n\n    // Convert aggregated data into arrays for the chart\n    Object.values(assignmentsByEmployee).forEach(value => {\n      tempChartData.assignedCount.push(value.assigned);\n      tempChartData.completedCount.push(value.completed);\n    });\n    setChartData(tempChartData);\n    refreshAllData();\n    fetchAllTrainings();\n    if (user.user_role === 'management') {\n      fetchTrainingAssignments();\n    }\n    fetchTrainingModules();\n    const fetchEmployees = async () => {\n      if (user.user_role === 'management') {\n        const url = `http://localhost:4000/employees/organization/${user.organization_id}`; // Updated URL to match the new endpoint\n        const response = await fetch(url);\n        const data = await response.json();\n        setEmployees(data);\n      }\n    };\n    fetchEmployees();\n\n    // Call fetchBadges for all users\n    fetchBadges();\n    fetchEmployeeBadges();\n    fetchEnrollEmployees();\n    fetchUnenrollEmployees();\n  }, [user.user_id, user.user_role, user.organization_id, trainingAssignments]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\n    const data = await response.json();\n    setAssignedModules(data.assignedModules);\n    setCompletedModules(data.completedModules);\n  };\n  const fetchEnrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownEnrollEmployee(data);\n  };\n  const fetchUnenrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownUnenrollEmployee(data);\n  };\n  const handleEnrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedEnrollEmployee(selectedValue);\n      setDropdownEnrollModule(data);\n    } catch (error) {\n      console.error('Error fetching enroll module data:', error);\n    }\n  };\n  const handleUnenrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedUnenrollEmployee(selectedValue);\n      setDropdownUnenrollModule(data);\n    } catch (error) {\n      console.error('Error fetching unenroll module data:', error);\n    }\n  };\n  const handleEnrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedEnrollModule(selectedValue);\n  };\n  const handleUnenrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedUnenrollModule(selectedValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        borderBottom: '25px solid #17a2b8',\n        paddingBottom: '10px'\n      },\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Badges: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: Array.isArray(employee.badges) ? employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyChartComponent, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: trainingAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: `${assignment.first_name} ${assignment.last_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: assignment.module_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 119\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: '5px 10px',\n                borderRadius: '5px',\n                color: '#ffffff',\n                backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545' // Green for Completed, Red for Assigned\n              },\n              children: assignment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)]\n          }, `${assignment.user_id}-${assignment.module_name}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Rarest Badge:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), rarestBadge.count > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The rarest badge is \\\"\", rarestBadge.badge_name, \"\\\" with \", rarestBadge.count, \" occurrences.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Badge information is currently unavailable.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Badge Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n            gap: '15px'\n          },\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              borderRadius: '5px',\n              padding: '10px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0 0 10px 0'\n              },\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"User ID: \", employee.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: employee.badges && employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    background: '#e9ecef',\n                    borderRadius: '5px',\n                    padding: '5px 10px',\n                    marginRight: '5px',\n                    marginBottom: '5px',\n                    fontSize: '14px'\n                  },\n                  children: badge.badge_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#6c757d'\n                  },\n                  children: [\"Earned on: \", new Date(badge.earned_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 29\n                }, this)]\n              }, badge.badge_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 21\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Leaderboard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: employees.sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0)).map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'bold',\n                  margin: '0'\n                },\n                children: [employee.first_name, \" \", employee.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0',\n                  fontSize: '12px'\n                },\n                children: [\"User ID: \", employee.user_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0'\n                },\n                children: [\"Score: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enroll Employees in Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollEmployee,\n            onChange: handleEnrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollModule,\n            onChange: handleEnrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), dropdownEnrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unenroll Employees from Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollEmployee,\n            onChange: handleUnenrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollModule,\n            onChange: handleUnenrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 13\n            }, this), dropdownUnenrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unenrollEmployeeFromTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Unenroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerMetricsDashboard, \"l1Qk6Y2j0D2CVmiyUR26WA/i0sQ=\");\n_c = ManagerMetricsDashboard;\nexport default ManagerMetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerMetricsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerMetricsDashboard","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchEnrollEmployees","fetchUnenrollEmployees","chartData","setChartData","labels","assignedCount","completedCount","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","get","badge_id","name","set","Array","from","values","reduce","acc","val","Infinity","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","user_role","fetchTrainingModules","fetchEmployees","url","handleEnrollEmployeeChange","event","selectedValue","target","handleUnenrollEmployeeChange","handleEnrollModuleChange","handleUnenrollModuleChange","style","padding","children","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","borderRadius","color","marginTop","boxShadow","display","gridTemplateColumns","gap","map","background","margin","email","isArray","length","marginRight","marginBottom","fontSize","listStyleType","paddingLeft","justifyContent","alignItems","fontWeight","module_name","flexDirection","Date","earned_date","toLocaleDateString","sort","a","b","index","marginLeft","maxWidth","onChange","border","option","module_id","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Kyle/Desktop/CyberGuard Pro/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n  };\r\n\r\n    const [chartData, setChartData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Number of assigned trainings per employee\r\n      completedCount: [], // Number of completed trainings per employee\r\n    });\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            let count = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name };\r\n            badgeCounts.set(badge.badge_id, { count: count.count + 1, name: badge.badge_name });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n\r\n      const tempChartData = {\r\n        labels: [],\r\n        assignedCount: [],\r\n        completedCount: [],\r\n      };\r\n\r\n    \r\n      const assignmentsByEmployee = {}; // {employeeId: {assigned: 0, completed: 0}}\r\n      trainingAssignments.forEach(assignment => {\r\n        if (!assignmentsByEmployee[assignment.user_id]) {\r\n          assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n          tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n        }\r\n        if (assignment.status === 'completed') {\r\n          assignmentsByEmployee[assignment.user_id].completed++;\r\n        } else {\r\n          assignmentsByEmployee[assignment.user_id].assigned++;\r\n        }\r\n      });\r\n\r\n      // Convert aggregated data into arrays for the chart\r\n      Object.values(assignmentsByEmployee).forEach(value => {\r\n        tempChartData.assignedCount.push(value.assigned);\r\n        tempChartData.completedCount.push(value.completed);\r\n      });\r\n\r\n      setChartData(tempChartData);\r\n\r\n\r\n      refreshAllData();\r\n\r\n      fetchAllTrainings();\r\n    \r\n      if (user.user_role === 'management') {\r\n        fetchTrainingAssignments();\r\n      }\r\n      fetchTrainingModules();\r\n\r\n      const fetchEmployees = async () => {\r\n        if (user.user_role === 'management') {\r\n          const url = `http://localhost:4000/employees/organization/${user.organization_id}`; // Updated URL to match the new endpoint\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          setEmployees(data);\r\n        }\r\n      };\r\n      \r\n      fetchEmployees();\r\n\r\n\r\n\r\n\r\n    \r\n      // Call fetchBadges for all users\r\n      fetchBadges();\r\n      fetchEmployeeBadges();\r\n\r\n      fetchEnrollEmployees();\r\n      fetchUnenrollEmployees();\r\n\r\n    }, [user.user_id, user.user_role, user.organization_id, trainingAssignments]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    const response = await fetch(`http://localhost:4000/user-training-modules?userId=${user.user_id}`);\r\n    const data = await response.json();\r\n\r\n    setAssignedModules(data.assignedModules);\r\n    setCompletedModules(data.completedModules);\r\n  };\r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n  \r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n  \r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h2>Training Assignments for My Employees</h2>\r\n            <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n                {trainingAssignments.map((assignment) => (\r\n                <li key={`${assignment.user_id}-${assignment.module_name}`} style={{ \r\n                    padding: '10px', \r\n                    marginBottom: '10px',\r\n                    backgroundColor: '#ffffff',\r\n                    borderRadius: '5px',\r\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    }}>\r\n                    <span style={{ fontWeight: 'bold' }}>{`${assignment.first_name} ${assignment.last_name}`}</span>  <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                    <span style={{ \r\n                        padding: '5px 10px', \r\n                        borderRadius: '5px', \r\n                        color: '#ffffff', \r\n                        backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545', // Green for Completed, Red for Assigned\r\n                    }}>\r\n                    {assignment.status}\r\n                    </span>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Rarest Badge:</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p>The rarest badge is \"{rarestBadge.badge_name}\" with {rarestBadge.count} occurrences.</p>\r\n          ) : (\r\n            <p>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                  <p style={{ margin: '0', fontSize: '12px' }}>User ID: {employee.user_id}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}