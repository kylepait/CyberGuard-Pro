{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julie\\\\OneDrive\\\\Desktop\\\\School\\\\semester4\\\\CS411W\\\\CyberGuard-Pro\\\\frontend\\\\src\\\\components\\\\manager_metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MyChartComponent from './trainingModulesBarChart';\nimport TrainingOverviewPieChart from './TrainingOverviewPieChart'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerMetricsDashboard() {\n  _s();\n  const [assignedModules, setAssignedModules] = useState([]);\n  const [completedModules, setCompletedModules] = useState([]);\n  const [allTrainings, setAllTrainings] = useState([]);\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\n  const [badges, setBadges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rarestBadge, setRarestBadge] = useState({\n    badge_name: '',\n    count: 0\n  });\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\n  const [goalDueDate, setGoalDueDate] = useState('');\n  const [goalIncentive, setGoalIncentive] = useState('');\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\n  const [averageTime, setAverageTime] = useState(null);\n  const [securityScore, setSecurityScore] = useState(null);\n  const refreshAllData = async () => {\n    await fetchTrainingAssignments();\n    await fetchEmployeeBadges();\n    await fetchAllTrainings();\n    await fetchTrainingAssignments();\n    await fetchBadges();\n    await fetchTrainingModules();\n    await fetchEnrollEmployees();\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\n    // Include any other fetch calls needed to refresh your UI accordingly\n    await fetchAverageTime();\n    await fetchSecurityScore();\n  };\n  const [chartData, setChartData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Number of assigned trainings per employee\n    completedCount: [] // Number of completed trainings per employee\n  });\n  const enrollEmployeeInTraining = async () => {\n    const response = await fetch('http://localhost:4000/enroll-employee-training', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedEnrollEmployee,\n        moduleId: selectedEnrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee enrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to enroll employee.');\n    }\n  };\n  const unenrollEmployeeFromTraining = async () => {\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        employeeUserId: selectedUnenrollEmployee,\n        moduleId: selectedUnenrollModule\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Employee unenrolled successfully!');\n      await refreshAllData(); // Refresh all relevant data after a successful operation\n    } else {\n      alert('Failed to unenroll employee.');\n    }\n  };\n  const fetchBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\n      const data = await response.json();\n      setBadges(data);\n    } catch (error) {\n      console.error('Error fetching badges:', error);\n    }\n  };\n  const fetchEmployeeBadges = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setEmployees(data);\n\n        // Initialize a map to count occurrences of each badge and keep track of an image path\n        let badgeCounts = new Map();\n\n        // Iterate over each employee and their badges\n        data.forEach(employee => {\n          employee.badges.forEach(badge => {\n            // If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\n            let badgeInfo = badgeCounts.get(badge.badge_id) || {\n              count: 0,\n              name: badge.badge_name,\n              imagePath: badge.image_path\n            };\n            badgeCounts.set(badge.badge_id, {\n              ...badgeInfo,\n              count: badgeInfo.count + 1\n            });\n          });\n        });\n\n        // Find the rarest badge by looking for the minimum count\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, {\n          count: Infinity,\n          name: '',\n          imagePath: ''\n        });\n        setRarestBadge({\n          badge_name: rarestBadge.name,\n          count: rarestBadge.count,\n          image_path: rarestBadge.imagePath\n        });\n      } else {\n        console.error('Failed to fetch employee badges');\n      }\n    } catch (error) {\n      console.error('Error fetching employee badges:', error);\n    }\n  };\n  const fetchAverageTime = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/average-time/${user.organization_id}`);\n      const data = await response.json();\n      setAverageTime(data.average_duration);\n    } catch (error) {\n      console.error('Error fetching average time:', error);\n    }\n  };\n  const fetchSecurityScore = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/security-score/${user.organization_id}`);\n      const data = await response.json();\n      setSecurityScore(data.security_score);\n      console.log(data);\n      console.log(data.securityScore);\n    } catch (error) {\n      console.error('Error fetching security score:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchDataIfNeeded = async () => {\n      await refreshAllData();\n    };\n    fetchDataIfNeeded();\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\n  }, [user.user_id, user.user_role, user.organization_id]);\n  useEffect(() => {\n    const tempChartData = {\n      labels: [],\n      assignedCount: [],\n      completedCount: []\n    };\n    const assignmentsByEmployee = {}; // Structure to hold the count\n    trainingAssignments.forEach(assignment => {\n      if (!assignmentsByEmployee[assignment.user_id]) {\n        assignmentsByEmployee[assignment.user_id] = {\n          assigned: 0,\n          completed: 0\n        };\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\n      }\n      if (assignment.status === 'completed') {\n        assignmentsByEmployee[assignment.user_id].completed++;\n      } else {\n        assignmentsByEmployee[assignment.user_id].assigned++;\n      }\n    });\n\n    // Convert aggregated data into arrays for the chart\n    Object.values(assignmentsByEmployee).forEach(value => {\n      tempChartData.assignedCount.push(value.assigned);\n      tempChartData.completedCount.push(value.completed);\n    });\n    setChartData(tempChartData);\n    // This effect should only run when trainingAssignments change.\n\n    const moduleCompletionCounts = {}; // {moduleId: count}\n\n    trainingAssignments.forEach(assignment => {\n      if (assignment.status === 'completed') {\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\n      }\n    });\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\n      return !acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc] ? moduleId : acc;\n    }, null);\n\n    // Assuming you have a way to fetch or determine the security suggestion for a module\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\n    setSecuritySuggestion(securitySuggestion);\n  }, [trainingAssignments]);\n  useEffect(() => {\n    // Assume `employees` is already populated with badge counts\n    const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\n    const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\n    setTopBadgeEarners(earners);\n  }, [employees]);\n\n  // Declare fetchAllTrainings outside useEffect\n  const fetchAllTrainings = async () => {\n    const response = await fetch('http://localhost:4000/all-trainings');\n    const data = await response.json();\n    setAllTrainings(data);\n  };\n  const fetchTrainingAssignments = async () => {\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\n    const data = await response.json();\n    setTrainingAssignments(data);\n  };\n  const fetchTrainingModules = async () => {\n    // Assuming `user.organization_id` holds the organization ID of the logged-in manager\n    const organizationId = user.organization_id;\n\n    // Adjust the API endpoint or add parameters as necessary to fetch data filtered by organization ID\n    const response = await fetch(`http://localhost:4000/training-modules/${user.organization_id}`);\n    const data = await response.json();\n    console.log(\"Fetched training modules data for organization:\", organizationId, data); // Debug fetched data\n\n    // Assuming the API returns data in a structure where you can segregate assigned and completed modules\n    const assignedModules = data.filter(module => module.status === 'assigned');\n    const completedModules = data.filter(module => module.status === 'completed');\n    setAssignedModules(assignedModules);\n    setCompletedModules(completedModules);\n  };\n  const fetchEnrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownEnrollEmployee(data);\n  };\n  const handleEnrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedEnrollEmployee(selectedValue);\n      setDropdownEnrollModule(data);\n    } catch (error) {\n      console.error('Error fetching enroll module data:', error);\n    }\n  };\n  const handleEnrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedEnrollModule(selectedValue);\n  };\n  const fetchUnenrollEmployees = async () => {\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\n    const data = await response.json();\n    setDropdownUnenrollEmployee(data);\n  };\n  const handleUnenrollEmployeeChange = async event => {\n    const selectedValue = event.target.value;\n    try {\n      const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\n      const data = await response.json();\n      setSelectedUnenrollEmployee(selectedValue);\n      setDropdownUnenrollModule(data);\n    } catch (error) {\n      console.error('Error fetching unenroll module data:', error);\n    }\n  };\n  const handleUnenrollModuleChange = async event => {\n    const selectedValue = event.target.value;\n    setSelectedUnenrollModule(selectedValue);\n  };\n  const handleSetGoal = async event => {\n    event.preventDefault();\n\n    // Assuming you have the organization ID stored in the state or derived from the user's session\n    const organizationId = user.organization_id;\n    const goalData = {\n      organizationId,\n      dueDate: goalDueDate,\n      incentive: goalIncentive\n    };\n    try {\n      // Replace the URL with your actual endpoint\n      const response = await fetch('http://localhost:4000/api/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(goalData)\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        alert('Goal set successfully');\n        // Optionally, clear the form fields or update the UI\n      } else {\n        alert('Failed to set goal');\n      }\n    } catch (error) {\n      console.error('Error setting goal:', error);\n      alert('Error setting goal');\n    }\n  };\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\n  const [employeeVisibility, setEmployeeVisibility] = useState({});\n  function getSecuritySuggestionForModule(moduleId) {\n    // Example: Predefined suggestions\n    const suggestions = {\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\n      '4': 'General Cybersecurity could be lacking',\n      '5': 'Phishing attempts need to be educated against',\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\n      '7': 'Strong passwords for important website is crucial'\n\n      // Add more module IDs and suggestions as needed\n    };\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\n  }\n  const [trainingData, setTrainingData] = useState({\n    labels: [],\n    // Employee names\n    assignedCount: [],\n    // Total Assigned Trainings across all employees\n    completedCount: [] // Total Completed Trainings across all employees\n  });\n  useEffect(() => {\n    // Your existing logic to fetch or define trainingAssignments\n    // Assume trainingAssignments is an array of assignments with user_id, status, etc.\n    const tempChartData = {\n      labels: [],\n      assignedCount: 0,\n      completedCount: 0\n    };\n\n    // Example logic to accumulate total completed and assigned trainings\n    trainingAssignments.forEach(assignment => {\n      if (assignment.status === 'completed') {\n        tempChartData.completedCount++;\n      } else {\n        tempChartData.assignedCount++;\n      }\n    });\n    setTrainingData(tempChartData);\n    // Add any dependencies to this useEffect if necessary\n  }, [trainingAssignments]); // Include dependencies if your trainingAssignments data might change\n\n  const formatDuration = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        borderBottom: '25px solid #17a2b8',\n        paddingBottom: '10px'\n      },\n      children: \"Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Score:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: securityScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Suggestion Based on Training Completion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: securitySuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f0f0f0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Average Time Spent on Training Modules:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDuration(averageTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '5px',\n        color: '#343a40',\n        marginTop: '20px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employees in Your Organization:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          gap: '15px'\n        },\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'white',\n            borderRadius: '5px',\n            padding: '10px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: [employee.first_name, \" \", employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"Email: \", employee.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0'\n            },\n            children: [\"User ID: \", employee.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Badges: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: Array.isArray(employee.badges) ? employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-block',\n                background: '#e9ecef',\n                borderRadius: '5px',\n                padding: '5px 10px',\n                marginRight: '5px',\n                marginBottom: '5px',\n                fontSize: '14px'\n              },\n              children: badge.badge_name\n            }, badge.badge_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 25\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 21\n          }, this)]\n        }, employee.user_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyChartComponent, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Organization Training Overview (Completed v Assigned)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TrainingOverviewPieChart, {\n        trainingData: [{\n          completedCount: trainingData.completedCount,\n          assignedCount: trainingData.assignedCount\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          backgroundColor: '#f2f2f2',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Training Assignments for My Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), trainingAssignments.reduce((acc, assignment) => {\n          // Create an array of unique employee IDs\n          if (!acc.includes(assignment.user_id)) acc.push(assignment.user_id);\n          return acc;\n        }, []).map(userId => {\n          // Filter assignments for this employee\n          const employeeAssignments = trainingAssignments.filter(assignment => assignment.user_id === userId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              onClick: () => setEmployeeVisibility(prev => ({\n                ...prev,\n                [userId]: !prev[userId]\n              })),\n              style: {\n                cursor: 'pointer',\n                textAlign: 'left'\n              },\n              children: [employeeAssignments[0].first_name, \" \", employeeAssignments[0].last_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), employeeVisibility[userId] && /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: 'none',\n                paddingLeft: '0'\n              },\n              children: employeeAssignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  padding: '10px',\n                  marginBottom: '10px',\n                  backgroundColor: '#ffffff',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: assignment.module_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 23\n                  }, this), assignment.module_format === 'slidesQ' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: 'bold',\n                        marginLeft: 'auto'\n                      },\n                      children: [assignment.score, \"/5\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '5px 10px',\n                      borderRadius: '5px',\n                      color: '#ffffff',\n                      backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\n                      marginLeft: 'auto',\n                      alignSelf: 'center'\n                    },\n                    children: assignment.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this), assignment.status === 'completed' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginTop: '5px',\n                    marginLeft: 'auto'\n                  },\n                  children: formatDuration(assignment.duration)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 27\n                }, this)]\n              }, `${assignment.module_name}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '20px',\n          backgroundColor: '#fff',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '10px',\n              color: '#007bff'\n            },\n            children: \"Rarest Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 11\n          }, this), rarestBadge.count > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: [\"The rarest badge is \\\"\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.badge_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 36\n            }, this), \"\\\" with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: rarestBadge.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 84\n            }, this), \" occurrences.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: \"Badge information is currently unavailable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 9\n        }, this), rarestBadge.count > 0 && rarestBadge.image_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rarestBadge.image_path.startsWith('/') ? process.env.PUBLIC_URL + rarestBadge.image_path : rarestBadge.image_path,\n          alt: rarestBadge.badge_name,\n          style: {\n            width: '100px',\n            height: '100px',\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50px',\n            height: '50px',\n            background: '#ddd',\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textAlign: 'center',\n              color: '#666'\n            },\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Badge Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n            gap: '15px'\n          },\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'white',\n              borderRadius: '5px',\n              padding: '10px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: '0 0 10px 0'\n              },\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0'\n              },\n              children: [\"User ID: \", employee.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: employee.badges && employee.badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    background: '#e9ecef',\n                    borderRadius: '5px',\n                    padding: '5px 10px',\n                    marginRight: '5px',\n                    marginBottom: '5px',\n                    fontSize: '14px'\n                  },\n                  children: badge.badge_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#6c757d'\n                  },\n                  children: [\"Earned on: \", new Date(badge.earned_date).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 29\n                }, this)]\n              }, badge.badge_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 21\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          color: '#343a40',\n          marginTop: '20px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Employee Leaderboard:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '0',\n            marginTop: '20px'\n          },\n          children: employees.sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0)).map((employee, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '10px',\n              marginBottom: '10px',\n              backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\n              borderRadius: '5px',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontWeight: 'bold',\n                  margin: '0'\n                },\n                children: [employee.first_name, \" \", employee.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  margin: '0'\n                },\n                children: [\"Score: \", Array.isArray(employee.badges) ? employee.badges.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this)]\n          }, employee.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#f8f9fa',\n          padding: '20px',\n          borderRadius: '5px',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enroll Employees in Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollEmployee,\n            onChange: handleEnrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedEnrollModule,\n            onChange: handleEnrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), dropdownEnrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enrollEmployeeInTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Enroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            maxWidth: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unenroll Employees from Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollEmployee,\n            onChange: handleUnenrollEmployeeChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.user_id,\n              children: [employee.first_name, \" \", employee.last_name]\n            }, employee.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedUnenrollModule,\n            onChange: handleUnenrollModuleChange,\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Training Module\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 13\n            }, this), dropdownUnenrollModule.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.module_id,\n              children: option.module_name\n            }, option.module_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unenrollEmployeeFromTraining,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              border: 'none'\n            },\n            children: \"Unenroll Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            gap: '20px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Set a Goal for Your Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSetGoal,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalDueDate\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Goal Due Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"goalDueDate\",\n                  value: goalDueDate,\n                  onChange: e => setGoalDueDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '15px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goalIncentive\",\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: \"Incentive:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"goalIncentive\",\n                  value: goalIncentive,\n                  onChange: e => setGoalIncentive(e.target.value),\n                  placeholder: \"Enter incentive\",\n                  style: {\n                    width: '100%',\n                    height: '100px',\n                    resize: 'vertical',\n                    padding: '10px',\n                    borderRadius: '5px',\n                    border: '1px solid #ccc'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '12px',\n                    marginTop: '5px'\n                  },\n                  children: \"Maximum of 255 characters.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                style: {\n                  padding: '10px 20px',\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  borderRadius: '5px',\n                  border: 'none',\n                  cursor: 'pointer',\n                  transition: 'opacity 0.3s'\n                },\n                children: \"Set Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '20px',\n              backgroundColor: '#f0f0f0',\n              borderRadius: '8px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '20px'\n              },\n              children: \"Current Incentive Winner(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: 'none',\n                paddingLeft: '0'\n              },\n              children: topBadgeEarners.map(earner => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [earner.first_name, \" \", earner.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 21\n                }, this), \" - \", earner.badges.length, \" Badges\"]\n              }, earner.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerMetricsDashboard, \"BoRCSQDJOSXVKEEVFs+U/CWymCg=\");\n_c = ManagerMetricsDashboard;\nexport default ManagerMetricsDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerMetricsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","MyChartComponent","TrainingOverviewPieChart","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerMetricsDashboard","_s","assignedModules","setAssignedModules","completedModules","setCompletedModules","allTrainings","setAllTrainings","trainingAssignments","setTrainingAssignments","user","JSON","parse","localStorage","getItem","selectedEnrollEmployee","setSelectedEnrollEmployee","selectedEnrollModule","setSelectedEnrollModule","dropdownEnrollEmployee","setDropdownEnrollEmployee","dropdownEnrollModule","setDropdownEnrollModule","employees","setEmployees","selectedUnenrollEmployee","setSelectedUnenrollEmployee","selectedUnenrollModule","setSelectedUnenrollModule","dropdownUnenrollEmployee","setDropdownUnenrollEmployee","dropdownUnenrollModule","setDropdownUnenrollModule","badges","setBadges","loading","setLoading","rarestBadge","setRarestBadge","badge_name","count","securitySuggestion","setSecuritySuggestion","goalDueDate","setGoalDueDate","goalIncentive","setGoalIncentive","topBadgeEarners","setTopBadgeEarners","averageTime","setAverageTime","securityScore","setSecurityScore","refreshAllData","fetchTrainingAssignments","fetchEmployeeBadges","fetchAllTrainings","fetchBadges","fetchTrainingModules","fetchEnrollEmployees","fetchUnenrollEmployees","fetchAverageTime","fetchSecurityScore","chartData","setChartData","labels","assignedCount","completedCount","enrollEmployeeInTraining","response","fetch","method","headers","body","stringify","employeeUserId","moduleId","data","json","success","alert","unenrollEmployeeFromTraining","user_id","error","console","organization_id","ok","badgeCounts","Map","forEach","employee","badge","badgeInfo","get","badge_id","name","imagePath","image_path","set","Array","from","values","reduce","acc","val","Infinity","average_duration","security_score","log","fetchDataIfNeeded","user_role","tempChartData","assignmentsByEmployee","assignment","assigned","completed","push","first_name","last_name","status","Object","value","moduleCompletionCounts","module_id","leastCompletedModuleId","keys","getSecuritySuggestionForModule","maxBadgeCount","Math","max","map","emp","length","earners","filter","organizationId","module","handleEnrollEmployeeChange","event","selectedValue","target","handleEnrollModuleChange","handleUnenrollEmployeeChange","handleUnenrollModuleChange","handleSetGoal","preventDefault","goalData","dueDate","incentive","responseData","isAssignmentsVisible","setIsAssignmentsVisible","employeeVisibility","setEmployeeVisibility","suggestions","trainingData","setTrainingData","formatDuration","seconds","hours","floor","minutes","remainingSeconds","String","padStart","style","padding","children","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","backgroundColor","borderRadius","color","boxShadow","display","gridTemplateColumns","gap","background","margin","email","isArray","marginRight","marginBottom","fontSize","justifyContent","alignItems","cursor","includes","userId","employeeAssignments","onClick","prev","textAlign","listStyleType","paddingLeft","flexDirection","width","fontWeight","module_name","module_format","marginLeft","score","alignSelf","duration","src","startsWith","process","env","PUBLIC_URL","alt","height","Date","earned_date","toLocaleDateString","sort","a","b","index","maxWidth","onChange","border","option","flex","onSubmit","htmlFor","type","id","e","placeholder","resize","transition","earner","_c","$RefreshReg$"],"sources":["C:/Users/julie/OneDrive/Desktop/School/semester4/CS411W/CyberGuard-Pro/frontend/src/components/manager_metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MyChartComponent from './trainingModulesBarChart';\r\nimport TrainingOverviewPieChart from './TrainingOverviewPieChart'; // Adjust the path as necessary\r\n\r\n\r\n\r\nfunction ManagerMetricsDashboard() {\r\n\r\n\r\n\r\n\r\n  const [assignedModules, setAssignedModules] = useState([]);\r\n  const [completedModules, setCompletedModules] = useState([]);\r\n\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n\r\n  const [trainingAssignments, setTrainingAssignments] = useState([]);\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const [selectedEnrollEmployee, setSelectedEnrollEmployee] = useState('');\r\n  const [selectedEnrollModule, setSelectedEnrollModule] = useState('');\r\n  const [dropdownEnrollEmployee, setDropdownEnrollEmployee] = useState([]);\r\n  const [dropdownEnrollModule, setDropdownEnrollModule] = useState([]);\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [selectedUnenrollEmployee, setSelectedUnenrollEmployee] = useState('');\r\n  const [selectedUnenrollModule, setSelectedUnenrollModule] = useState('');\r\n  const [dropdownUnenrollEmployee, setDropdownUnenrollEmployee] = useState([]);\r\n  const [dropdownUnenrollModule, setDropdownUnenrollModule] = useState([]);\r\n  \r\n  const [badges, setBadges] = useState([]);\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rarestBadge, setRarestBadge] = useState({ badge_name: '', count: 0 });\r\n\r\n  const [securitySuggestion, setSecuritySuggestion] = useState('');\r\n\r\n  const [goalDueDate, setGoalDueDate] = useState('');\r\n  const [goalIncentive, setGoalIncentive] = useState('');\r\n  const [topBadgeEarners, setTopBadgeEarners] = useState([]);\r\n\r\n  const [averageTime, setAverageTime] = useState(null);\r\n  const [securityScore, setSecurityScore] = useState(null);\r\n\r\n\r\n  const refreshAllData = async () => {\r\n    await fetchTrainingAssignments();\r\n    await fetchEmployeeBadges();\r\n    await fetchAllTrainings();\r\n    await fetchTrainingAssignments();\r\n    await fetchBadges();\r\n    await fetchTrainingModules();\r\n  \r\n\r\n    await fetchEnrollEmployees();\r\n    await fetchUnenrollEmployees(); // Ensuring this calls the correct function to refresh employee badges\r\n    // Include any other fetch calls needed to refresh your UI accordingly\r\n    await fetchAverageTime();\r\n    await fetchSecurityScore();\r\n  };\r\n\r\n  const [chartData, setChartData] = useState({\r\n    labels: [], // Employee names\r\n    assignedCount: [], // Number of assigned trainings per employee\r\n    completedCount: [], // Number of completed trainings per employee\r\n  });\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n    const enrollEmployeeInTraining = async () => {\r\n      const response = await fetch('http://localhost:4000/enroll-employee-training', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ employeeUserId: selectedEnrollEmployee, moduleId: selectedEnrollModule })\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n          alert('Employee enrolled successfully!');\r\n          await refreshAllData(); // Refresh all relevant data after a successful operation\r\n      } else {\r\n          alert('Failed to enroll employee.');\r\n      }\r\n  };\r\n\r\n  const unenrollEmployeeFromTraining = async () => {\r\n    const response = await fetch('http://localhost:4000/unenroll-employee-training', {\r\n      method: 'DELETE',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ employeeUserId: selectedUnenrollEmployee, moduleId: selectedUnenrollModule })\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Employee unenrolled successfully!');\r\n      await refreshAllData(); // Refresh all relevant data after a successful operation\r\n    } else {\r\n      alert('Failed to unenroll employee.');\r\n    }\r\n  };\r\n\r\n  const fetchBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges?user_id=${user.user_id}`);\r\n      const data = await response.json();\r\n      setBadges(data);\r\n    } catch (error) {\r\n      console.error('Error fetching badges:', error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployeeBadges = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/badges/organization/${user.organization_id}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmployees(data);\r\n  \r\n        // Initialize a map to count occurrences of each badge and keep track of an image path\r\n        let badgeCounts = new Map();\r\n  \r\n        // Iterate over each employee and their badges\r\n        data.forEach(employee => {\r\n          employee.badges.forEach(badge => {\r\n            // If the badge is already in the map, increment its count, otherwise, set its count to 1 and save its image path\r\n            let badgeInfo = badgeCounts.get(badge.badge_id) || { count: 0, name: badge.badge_name, imagePath: badge.image_path };\r\n            badgeCounts.set(badge.badge_id, { ...badgeInfo, count: badgeInfo.count + 1 });\r\n          });\r\n        });\r\n  \r\n        // Find the rarest badge by looking for the minimum count\r\n        let rarestBadge = Array.from(badgeCounts.values()).reduce((acc, val) => val.count < acc.count ? val : acc, { count: Infinity, name: '', imagePath: '' });\r\n  \r\n        setRarestBadge({ badge_name: rarestBadge.name, count: rarestBadge.count, image_path: rarestBadge.imagePath });\r\n      } else {\r\n        console.error('Failed to fetch employee badges');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee badges:', error);\r\n    }\r\n  };\r\n  \r\n  const fetchAverageTime = async () => {\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/average-time/${user.organization_id}`);\r\n        const data = await response.json();\r\n        setAverageTime(data.average_duration);\r\n    } catch (error) {\r\n        console.error('Error fetching average time:', error);\r\n    }\r\n  }; \r\n\r\n  const fetchSecurityScore = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/security-score/${user.organization_id}`);\r\n      const data = await response.json();\r\n      setSecurityScore(data.security_score);\r\n      console.log(data);\r\n      console.log(data.securityScore);\r\n    } catch (error) {\r\n      console.error('Error fetching security score:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDataIfNeeded = async () => {\r\n      \r\n      await refreshAllData();\r\n    };\r\n  \r\n    fetchDataIfNeeded();\r\n    // This effect should only run when the page loads or when certain user properties change that necessitate a re-fetch.\r\n  }, [user.user_id, user.user_role, user.organization_id]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const tempChartData = {\r\n      labels: [],\r\n      assignedCount: [],\r\n      completedCount: [],\r\n    };\r\n  \r\n    const assignmentsByEmployee = {}; // Structure to hold the count\r\n    trainingAssignments.forEach(assignment => {\r\n      if (!assignmentsByEmployee[assignment.user_id]) {\r\n        assignmentsByEmployee[assignment.user_id] = { assigned: 0, completed: 0 };\r\n        tempChartData.labels.push(`${assignment.first_name} ${assignment.last_name}`);\r\n      }\r\n      if (assignment.status === 'completed') {\r\n        assignmentsByEmployee[assignment.user_id].completed++;\r\n      } else {\r\n        assignmentsByEmployee[assignment.user_id].assigned++;\r\n      }\r\n    });\r\n  \r\n    // Convert aggregated data into arrays for the chart\r\n    Object.values(assignmentsByEmployee).forEach(value => {\r\n      tempChartData.assignedCount.push(value.assigned);\r\n      tempChartData.completedCount.push(value.completed);\r\n    });\r\n  \r\n    setChartData(tempChartData);\r\n    // This effect should only run when trainingAssignments change.\r\n\r\n    const moduleCompletionCounts = {}; // {moduleId: count}\r\n\r\n    trainingAssignments.forEach(assignment => {\r\n      if (assignment.status === 'completed') {\r\n        moduleCompletionCounts[assignment.module_id] = (moduleCompletionCounts[assignment.module_id] || 0) + 1;\r\n      }\r\n    });\r\n  \r\n    const leastCompletedModuleId = Object.keys(moduleCompletionCounts).reduce((acc, moduleId) => {\r\n      return (!acc || moduleCompletionCounts[moduleId] < moduleCompletionCounts[acc]) ? moduleId : acc;\r\n    }, null);\r\n  \r\n    // Assuming you have a way to fetch or determine the security suggestion for a module\r\n    const securitySuggestion = getSecuritySuggestionForModule(leastCompletedModuleId);\r\n  \r\n    setSecuritySuggestion(securitySuggestion);\r\n\r\n\r\n  }, [trainingAssignments]);\r\n\r\n  useEffect(() => {\r\n      // Assume `employees` is already populated with badge counts\r\n      const maxBadgeCount = Math.max(...employees.map(emp => emp.badges.length));\r\n      const earners = employees.filter(emp => emp.badges.length === maxBadgeCount);\r\n      setTopBadgeEarners(earners);\r\n  }, [employees]);\r\n\r\n\r\n  // Declare fetchAllTrainings outside useEffect\r\n  const fetchAllTrainings = async () => {\r\n    const response = await fetch('http://localhost:4000/all-trainings'); \r\n    const data = await response.json();\r\n    setAllTrainings(data);\r\n  };\r\n\r\n\r\n\r\n  const fetchTrainingAssignments = async () => {\r\n    const response = await fetch(`http://localhost:4000/training-assignments/${user.organization_id}`);\r\n    const data = await response.json();\r\n    setTrainingAssignments(data);\r\n  };\r\n\r\n  const fetchTrainingModules = async () => {\r\n    // Assuming `user.organization_id` holds the organization ID of the logged-in manager\r\n    const organizationId = user.organization_id;\r\n  \r\n    // Adjust the API endpoint or add parameters as necessary to fetch data filtered by organization ID\r\n    const response = await fetch(`http://localhost:4000/training-modules/${user.organization_id}`);\r\n    const data = await response.json();\r\n  \r\n    console.log(\"Fetched training modules data for organization:\", organizationId, data); // Debug fetched data\r\n  \r\n    // Assuming the API returns data in a structure where you can segregate assigned and completed modules\r\n    const assignedModules = data.filter(module => module.status === 'assigned');\r\n    const completedModules = data.filter(module => module.status === 'completed');\r\n  \r\n    setAssignedModules(assignedModules);\r\n    setCompletedModules(completedModules);\r\n  };\r\n  \r\n\r\n  const fetchEnrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownEnrollEmployee(data);\r\n  };\r\n\r\n  const handleEnrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/enroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedEnrollEmployee(selectedValue);\r\n        setDropdownEnrollModule(data);\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching enroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEnrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedEnrollModule(selectedValue);\r\n  };\r\n  \r\n  const fetchUnenrollEmployees = async () => {\r\n    const response = await fetch(`http://localhost:4000/employees/organization/${user.organization_id}`);\r\n    const data = await response.json();\r\n\r\n    setDropdownUnenrollEmployee(data);\r\n  };\r\n  \r\n  const handleUnenrollEmployeeChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/unenroll-modules/${selectedValue}`);\r\n        const data = await response.json();\r\n        setSelectedUnenrollEmployee(selectedValue);\r\n        setDropdownUnenrollModule(data);\r\n    } catch (error) {\r\n        console.error('Error fetching unenroll module data:', error);\r\n    }\r\n  };\r\n\r\n  const handleUnenrollModuleChange = async (event) => {\r\n    const selectedValue = event.target.value;\r\n    \r\n    setSelectedUnenrollModule(selectedValue);\r\n  };\r\n\r\n  const handleSetGoal = async (event) => {\r\n      event.preventDefault();\r\n\r\n      // Assuming you have the organization ID stored in the state or derived from the user's session\r\n      const organizationId = user.organization_id;\r\n\r\n      const goalData = {\r\n          organizationId,\r\n          dueDate: goalDueDate,\r\n          incentive: goalIncentive\r\n      };\r\n\r\n      try {\r\n          // Replace the URL with your actual endpoint\r\n          const response = await fetch('http://localhost:4000/api/goals', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify(goalData),\r\n          });\r\n\r\n          const responseData = await response.json();\r\n\r\n          if (response.ok) {\r\n              alert('Goal set successfully');\r\n              // Optionally, clear the form fields or update the UI\r\n          } else {\r\n              alert('Failed to set goal');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error setting goal:', error);\r\n          alert('Error setting goal');\r\n      }\r\n  };\r\n\r\n  const [isAssignmentsVisible, setIsAssignmentsVisible] = useState(false);\r\n  const [employeeVisibility, setEmployeeVisibility] = useState({});\r\n\r\n\r\n\r\n\r\n\r\n  function getSecuritySuggestionForModule(moduleId) {\r\n    // Example: Predefined suggestions\r\n    const suggestions = {\r\n      '1': 'Ensure all employees complete the phishing awareness training to significantly reduce the risk of successful email attacks.',\r\n      '2': 'Password security training is crucial for protecting against unauthorized access. Consider scheduling a session soon.',\r\n      '3': 'Intro Training to CyberGuardPro is greatly help with security understanding',\r\n      '4': 'General Cybersecurity could be lacking',\r\n      '5': 'Phishing attempts need to be educated against',\r\n      '6': 'It is beneficial for employees to be able to detect suspicious behavior',\r\n      '7': 'Strong passwords for important website is crucial'\r\n\r\n\r\n\r\n\r\n\r\n      // Add more module IDs and suggestions as needed\r\n    };\r\n  \r\n    return suggestions[moduleId] || 'No specific suggestion available. Ensure all security trainings are completed.';\r\n  }\r\n\r\n\r\n\r\n\r\n    const [trainingData, setTrainingData] = useState({\r\n      labels: [], // Employee names\r\n      assignedCount: [], // Total Assigned Trainings across all employees\r\n      completedCount: [], // Total Completed Trainings across all employees\r\n    });\r\n  \r\n    useEffect(() => {\r\n      // Your existing logic to fetch or define trainingAssignments\r\n      // Assume trainingAssignments is an array of assignments with user_id, status, etc.\r\n      const tempChartData = {\r\n        labels: [],\r\n        assignedCount: 0,\r\n        completedCount: 0,\r\n      };\r\n  \r\n      // Example logic to accumulate total completed and assigned trainings\r\n      trainingAssignments.forEach(assignment => {\r\n        if (assignment.status === 'completed') {\r\n          tempChartData.completedCount++;\r\n        } else {\r\n          tempChartData.assignedCount++;\r\n        }\r\n      });\r\n  \r\n      setTrainingData(tempChartData);\r\n      // Add any dependencies to this useEffect if necessary\r\n    }, [trainingAssignments]); // Include dependencies if your trainingAssignments data might change\r\n\r\n  \r\n    const formatDuration = (seconds) => {\r\n      const hours = Math.floor(seconds / 3600);\r\n      const minutes = Math.floor((seconds % 3600) / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\r\n    };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n\r\n        <h2 style={{ borderBottom: '25px solid #17a2b8', paddingBottom: '10px' }}>Metrics Dashboard</h2>\r\n\r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Score:</h3>\r\n          <p>{securityScore}</p>\r\n        </div>\r\n\r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Security Suggestion Based on Training Completion:</h3>\r\n          <p>{securitySuggestion}</p>\r\n        </div>\r\n  \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f0f0f0', borderRadius: '5px' }}>\r\n          <h3>Average Time Spent on Training Modules:</h3>\r\n          <p>{formatDuration(averageTime)}</p>\r\n        </div>\r\n\r\n\r\n        {/* Section for Employee Badges */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employees in Your Organization:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    {/* Display total badges count */}\r\n                    <p>Total Badges: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {Array.isArray(employee.badges) ? employee.badges.map(badge => (\r\n                        <span key={badge.badge_id} style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                        {badge.badge_name}\r\n                        </span>\r\n                    )) : <p>No badges</p>}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n            \r\n        <MyChartComponent chartData={chartData} />\r\n\r\n        <div style={{justifyContent: 'center', alignItems: 'center'}}>\r\n          <h3>Organization Training Overview (Completed v Assigned)</h3>\r\n          <TrainingOverviewPieChart\r\n            trainingData={[\r\n              {\r\n                completedCount: trainingData.completedCount,\r\n                assignedCount: trainingData.assignedCount,\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n\r\n  \r\n      \r\n        <>\r\n        <div style={{ marginTop: '40px', backgroundColor: '#f2f2f2', padding: '20px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h2 style={{ cursor: 'pointer' }}>\r\n              Training Assignments for My Employees\r\n          </h2>\r\n          {trainingAssignments.reduce((acc, assignment) => {\r\n            // Create an array of unique employee IDs\r\n            if (!acc.includes(assignment.user_id)) acc.push(assignment.user_id);\r\n            return acc;\r\n          }, []).map((userId) => {\r\n            // Filter assignments for this employee\r\n            const employeeAssignments = trainingAssignments.filter(assignment => assignment.user_id === userId);\r\n            return (\r\n              <div key={userId}>\r\n                <h3 onClick={() => setEmployeeVisibility(prev => ({ ...prev, [userId]: !prev[userId] }))} style={{ cursor: 'pointer', textAlign: 'left' }}>\r\n                  {employeeAssignments[0].first_name} {employeeAssignments[0].last_name} {/* Assuming first_name and last_name are available */}\r\n                </h3>\r\n                {employeeVisibility[userId] && (\r\n                <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                  {employeeAssignments.map((assignment) => (\r\n                    <li key={`${assignment.module_name}`} style={{ \r\n                        padding: '10px',\r\n                        marginBottom: '10px',\r\n                        backgroundColor: '#ffffff',\r\n                        borderRadius: '5px', \r\n                        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'flex-start',\r\n                    }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                      <span style={{ fontWeight: 'bold' }}>{assignment.module_name}</span>\r\n                      {assignment.module_format === 'slidesQ' && (\r\n                        <>\r\n                        <span style={{ fontWeight: 'bold', marginLeft: 'auto' }}>{assignment.score}/5</span>\r\n                        </>\r\n                      )}\r\n                      <span style={{ \r\n                            padding: '5px 10px', \r\n                            borderRadius: '5px', \r\n                            color: '#ffffff', \r\n                            backgroundColor: assignment.status === 'completed' ? '#28a745' : '#dc3545',\r\n                            marginLeft: 'auto',\r\n                            alignSelf: 'center',\r\n                      }}>\r\n                        {assignment.status}\r\n                      </span>\r\n                      </div>\r\n                        {assignment.status === 'completed' && (\r\n                          <span style={{ marginTop: '5px', marginLeft: 'auto' }}>\r\n                          {formatDuration(assignment.duration)}\r\n                          </span>\r\n                        )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          );\r\n         })}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div style={{\r\n        marginTop: '20px',\r\n        padding: '20px',\r\n        backgroundColor: '#fff',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n      }}>\r\n        <div>\r\n          <h3 style={{ marginBottom: '10px', color: '#007bff' }}>Rarest Badge</h3>\r\n          {rarestBadge.count > 0 ? (\r\n            <p style={{ margin: 0 }}>\r\n              The rarest badge is \"<strong>{rarestBadge.badge_name}</strong>\" with <strong>{rarestBadge.count}</strong> occurrences.\r\n            </p>\r\n          ) : (\r\n            <p style={{ margin: 0 }}>Badge information is currently unavailable.</p>\r\n          )}\r\n        </div>\r\n        {rarestBadge.count > 0 && rarestBadge.image_path ? (\r\n          <img src={rarestBadge.image_path.startsWith('/') ? process.env.PUBLIC_URL + rarestBadge.image_path : rarestBadge.image_path} alt={rarestBadge.badge_name} style={{ width: '100px', height: '100px', borderRadius: '50%' }} />\r\n        ) : (\r\n          <div style={{ width: '50px', height: '50px', background: '#ddd', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            {/* Placeholder if no image path is available */}\r\n            <span style={{ textAlign: 'center', color: '#666' }}>?</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n            <h3>Employee Badge Information:</h3>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', gap: '15px' }}>\r\n                {employees.map(employee => (\r\n                <div key={employee.user_id} style={{ background: 'white', borderRadius: '5px', padding: '10px', boxShadow: '0 2px 4px rgba(0,0,0,0.05)' }}>\r\n                    <h4 style={{ margin: '0 0 10px 0' }}>{employee.first_name} {employee.last_name}</h4>\r\n                    <p style={{ margin: '0' }}>Email: {employee.email}</p>\r\n                    <p style={{ margin: '0' }}>User ID: {employee.user_id}</p>\r\n                    <div style={{ marginTop: '10px' }}>\r\n                    {employee.badges && employee.badges.map(badge => (\r\n                        <div key={badge.badge_id} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: '10px' }}>\r\n                            <span style={{ display: 'inline-block', background: '#e9ecef', borderRadius: '5px', padding: '5px 10px', marginRight: '5px', marginBottom: '5px', fontSize: '14px' }}>\r\n                            {badge.badge_name}\r\n                            </span>\r\n                            {/* Display the earned date below each badge */}\r\n                            <span style={{ fontSize: '12px', color: '#6c757d' }}>\r\n                                Earned on: {new Date(badge.earned_date).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        {/* Leaderboard */}\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', color: '#343a40', marginTop: '20px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <h3>Employee Leaderboard:</h3>\r\n          <ul style={{ listStyleType: 'none', paddingLeft: '0', marginTop: '20px' }}>\r\n          {employees\r\n            .sort((a, b) => (Array.isArray(b.badges) ? b.badges.length : 0) - (Array.isArray(a.badges) ? a.badges.length : 0))\r\n            .map((employee, index) => (\r\n              <li key={employee.user_id} style={{\r\n                padding: '10px',\r\n                marginBottom: '10px',\r\n                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#ffffff',\r\n                borderRadius: '5px',\r\n                boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}>\r\n                <span style={{ fontWeight: 'bold' }}>{index + 1}</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginLeft: '10px' }}>\r\n                  <p style={{ fontWeight: 'bold', margin: '0' }}>{employee.first_name} {employee.last_name}</p>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <p style={{ margin: '0' }}>Score: {Array.isArray(employee.badges) ? employee.badges.length : 0}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        \r\n\r\n        \r\n        <div style={{ marginTop: '20px', backgroundColor: '#f8f9fa', padding: '20px', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '20px' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px'}}>\r\n            <h2>Enroll Employees in Training</h2>\r\n            <select value={selectedEnrollEmployee} onChange={handleEnrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedEnrollModule} onChange={handleEnrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Training Module</option>\r\n              {dropdownEnrollModule.map((option) => (\r\n                <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={enrollEmployeeInTraining} style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Enroll Employee\r\n            </button>\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', maxWidth: '300px' }}>\r\n            <h2>Unenroll Employees from Training</h2>\r\n            <select value={selectedUnenrollEmployee} onChange={handleUnenrollEmployeeChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n              <option value=\"\">Select Employee</option>\r\n              {employees.map((employee) => (\r\n                <option key={employee.user_id} value={employee.user_id}>{employee.first_name} {employee.last_name}</option>\r\n              ))}\r\n            </select>\r\n            <select value={selectedUnenrollModule} onChange={handleUnenrollModuleChange} style={{ padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}>\r\n            <option value=\"\">Select Training Module</option>\r\n              {dropdownUnenrollModule.map((option) => (\r\n                  <option key={option.module_id} value={option.module_id}>{option.module_name}</option>\r\n              ))}\r\n            </select>\r\n            <button onClick={unenrollEmployeeFromTraining} style={{ padding: '10px 20px', backgroundColor: '#dc3545', color: 'white', borderRadius: '5px', cursor: 'pointer', border: 'none' }}>\r\n              Unenroll Employee\r\n            </button>\r\n          </div>\r\n\r\n\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', gap: '20px', marginTop: '20px' }}>\r\n            {/* Set a Goal for Your Employees */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Set a Goal for Your Employees</h3>\r\n              <form onSubmit={handleSetGoal}>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalDueDate\" style={{ marginRight: '10px' }}>Goal Due Date:</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    id=\"goalDueDate\" \r\n                    value={goalDueDate} \r\n                    onChange={e => setGoalDueDate(e.target.value)} \r\n                  />\r\n                </div>\r\n                <div style={{ marginBottom: '15px' }}>\r\n                  <label htmlFor=\"goalIncentive\" style={{ marginRight: '10px' }}>Incentive:</label>\r\n                  <textarea\r\n                    id=\"goalIncentive\"\r\n                    value={goalIncentive}\r\n                    onChange={e => setGoalIncentive(e.target.value)}\r\n                    placeholder=\"Enter incentive\"\r\n                    style={{ width: '100%', height: '100px', resize: 'vertical', padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n                  />\r\n                  <div style={{ fontSize: '12px', marginTop: '5px' }}>Maximum of 255 characters.</div>\r\n                </div>\r\n                <button type=\"submit\" style={{\r\n                  padding: '10px 20px',\r\n                  backgroundColor: '#007bff',\r\n                  color: 'white',\r\n                  borderRadius: '5px',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  transition: 'opacity 0.3s'\r\n                }}>\r\n                  Set Goal\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            {/* Current Incentive Winner(s) */}\r\n            <div style={{\r\n              flex: 1,\r\n              padding: '20px',\r\n              backgroundColor: '#f0f0f0',\r\n              borderRadius: '8px',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}>\r\n              <h3 style={{ marginBottom: '20px' }}>Current Incentive Winner(s)</h3>\r\n              <ul style={{ listStyleType: 'none', paddingLeft: '0' }}>\r\n                {topBadgeEarners.map(earner => (\r\n                  <li key={earner.user_id} style={{ marginBottom: '10px' }}>\r\n                    <strong>{earner.first_name} {earner.last_name}</strong> - {earner.badges.length} Badges\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default ManagerMetricsDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}