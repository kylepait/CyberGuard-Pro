{"ast":null,"code":"function validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (values.username === \"\") {\n    error.username = \"Username should not be empty\";\n  } else {\n    error.username = \"\";\n  }\n  if (values.org_id === \"\") {\n    error.org_id = \"Organization ID should not be empty\";\n  } else {\n    error.org_id = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password doesn't meet requirements\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","error","email_pattern","password_pattern","username","org_id","email","test","password"],"sources":["C:/Users/allyo/OneDrive/Desktop/CyberGuard-Pro/frontend/src/components/SignupValidation.js"],"sourcesContent":["function validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    if(values.username === \"\"){\r\n        error.username = \"Username should not be empty\"\r\n    }\r\n    else {\r\n        error.username = \"\"\r\n    }\r\n\r\n    if(values.org_id === \"\"){\r\n        error.org_id = \"Organization ID should not be empty\"\r\n    }\r\n    else {\r\n        error.org_id = \"\"\r\n    }\r\n\r\n    if(values.email === \"\"){\r\n        error.email = \"Email should not be empty\"\r\n    }\r\n    else if (!email_pattern.test(values.email)) {\r\n        error.email = \"Email didn't match\"\r\n\r\n    } else {\r\n        error.email = \"\"\r\n    }\r\n\r\n    if(values.password === \"\") {\r\n        error.password = \"Password should not be empty\"\r\n\r\n    }\r\n    else if(!password_pattern.test(values.password)) {\r\n        error.password = \"Password doesn't meet requirements\"\r\n\r\n    } else {\r\n        error.password = \"\"\r\n    }\r\n    return error;\r\n\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,iDAAiD;EAE1E,IAAGH,MAAM,CAACI,QAAQ,KAAK,EAAE,EAAC;IACtBH,KAAK,CAACG,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MACI;IACDH,KAAK,CAACG,QAAQ,GAAG,EAAE;EACvB;EAEA,IAAGJ,MAAM,CAACK,MAAM,KAAK,EAAE,EAAC;IACpBJ,KAAK,CAACI,MAAM,GAAG,qCAAqC;EACxD,CAAC,MACI;IACDJ,KAAK,CAACI,MAAM,GAAG,EAAE;EACrB;EAEA,IAAGL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAC;IACnBL,KAAK,CAACK,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MACI,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IACxCL,KAAK,CAACK,KAAK,GAAG,oBAAoB;EAEtC,CAAC,MAAM;IACHL,KAAK,CAACK,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAE;IACvBP,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EAEnD,CAAC,MACI,IAAG,CAACL,gBAAgB,CAACI,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE;IAC7CP,KAAK,CAACO,QAAQ,GAAG,oCAAoC;EAEzD,CAAC,MAAM;IACHP,KAAK,CAACO,QAAQ,GAAG,EAAE;EACvB;EACA,OAAOP,KAAK;AAEhB;AAEA,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}